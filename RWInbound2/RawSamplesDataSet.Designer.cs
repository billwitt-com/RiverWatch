//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RWInbound2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RawSamplesDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RawSamplesDataSet : global::System.Data.DataSet {
        
        private viewRawSamplesAllDataTable tableviewRawSamplesAll;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RawSamplesDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RawSamplesDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["viewRawSamplesAll"] != null)) {
                    base.Tables.Add(new viewRawSamplesAllDataTable(ds.Tables["viewRawSamplesAll"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public viewRawSamplesAllDataTable viewRawSamplesAll {
            get {
                return this.tableviewRawSamplesAll;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RawSamplesDataSet cln = ((RawSamplesDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["viewRawSamplesAll"] != null)) {
                    base.Tables.Add(new viewRawSamplesAllDataTable(ds.Tables["viewRawSamplesAll"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableviewRawSamplesAll = ((viewRawSamplesAllDataTable)(base.Tables["viewRawSamplesAll"]));
            if ((initTable == true)) {
                if ((this.tableviewRawSamplesAll != null)) {
                    this.tableviewRawSamplesAll.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RawSamplesDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RawSamplesDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableviewRawSamplesAll = new viewRawSamplesAllDataTable();
            base.Tables.Add(this.tableviewRawSamplesAll);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeviewRawSamplesAll() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RawSamplesDataSet ds = new RawSamplesDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void viewRawSamplesAllRowChangeEventHandler(object sender, viewRawSamplesAllRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class viewRawSamplesAllDataTable : global::System.Data.TypedTableBase<viewRawSamplesAllRow> {
            
            private global::System.Data.DataColumn columnSampleNumber;
            
            private global::System.Data.DataColumn columnEvent;
            
            private global::System.Data.DataColumn columnTypeCode;
            
            private global::System.Data.DataColumn columnWaterShed;
            
            private global::System.Data.DataColumn columnRiverName;
            
            private global::System.Data.DataColumn columnKitNumber;
            
            private global::System.Data.DataColumn columnOrganizationName;
            
            private global::System.Data.DataColumn columnStationNumber;
            
            private global::System.Data.DataColumn columnStationName;
            
            private global::System.Data.DataColumn columnSampleDate;
            
            private global::System.Data.DataColumn columnRWWaterShed;
            
            private global::System.Data.DataColumn columnWQCCWaterShed;
            
            private global::System.Data.DataColumn columnWaterCode;
            
            private global::System.Data.DataColumn columnWaterBodyID;
            
            private global::System.Data.DataColumn columnWaterShedRegion;
            
            private global::System.Data.DataColumn columnCounty;
            
            private global::System.Data.DataColumn columnWaterShedGathering;
            
            private global::System.Data.DataColumn columnProjectName;
            
            private global::System.Data.DataColumn columnProjectID;
            
            private global::System.Data.DataColumn columnUSGS_Flow;
            
            private global::System.Data.DataColumn columnPH;
            
            private global::System.Data.DataColumn columnTempC;
            
            private global::System.Data.DataColumn columnPHEN_ALK;
            
            private global::System.Data.DataColumn columnTOTAL_ALK;
            
            private global::System.Data.DataColumn columnTOTAL_HARD;
            
            private global::System.Data.DataColumn columnDO_MGL;
            
            private global::System.Data.DataColumn columnDOSAT;
            
            private global::System.Data.DataColumn columnAL_D;
            
            private global::System.Data.DataColumn columnAL_T;
            
            private global::System.Data.DataColumn columnAS_D;
            
            private global::System.Data.DataColumn columnAS_T;
            
            private global::System.Data.DataColumn columnCA_D;
            
            private global::System.Data.DataColumn columnCA_T;
            
            private global::System.Data.DataColumn columnCD_D;
            
            private global::System.Data.DataColumn columnCD_T;
            
            private global::System.Data.DataColumn columnCU_D;
            
            private global::System.Data.DataColumn columnCU_T;
            
            private global::System.Data.DataColumn columnFE_D;
            
            private global::System.Data.DataColumn columnFE_T;
            
            private global::System.Data.DataColumn columnMG_D;
            
            private global::System.Data.DataColumn columnMG_T;
            
            private global::System.Data.DataColumn columnMN_D;
            
            private global::System.Data.DataColumn columnMN_T;
            
            private global::System.Data.DataColumn columnPB_D;
            
            private global::System.Data.DataColumn columnPB_T;
            
            private global::System.Data.DataColumn columnSE_D;
            
            private global::System.Data.DataColumn columnSE_T;
            
            private global::System.Data.DataColumn columnZN_D;
            
            private global::System.Data.DataColumn columnZN_T;
            
            private global::System.Data.DataColumn columnNA_D;
            
            private global::System.Data.DataColumn columnNA_T;
            
            private global::System.Data.DataColumn columnK_D;
            
            private global::System.Data.DataColumn columnK_T;
            
            private global::System.Data.DataColumn columnAmmonia;
            
            private global::System.Data.DataColumn columnChloride;
            
            private global::System.Data.DataColumn columnChlorophyllA;
            
            private global::System.Data.DataColumn columnDOC;
            
            private global::System.Data.DataColumn columnNN;
            
            private global::System.Data.DataColumn columnOP;
            
            private global::System.Data.DataColumn columnSulfate;
            
            private global::System.Data.DataColumn columntotN;
            
            private global::System.Data.DataColumn columntotP;
            
            private global::System.Data.DataColumn columnTKN;
            
            private global::System.Data.DataColumn columnorgN;
            
            private global::System.Data.DataColumn columnTSS;
            
            private global::System.Data.DataColumn columnValid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllDataTable() {
                this.TableName = "viewRawSamplesAll";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal viewRawSamplesAllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected viewRawSamplesAllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleNumberColumn {
                get {
                    return this.columnSampleNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EventColumn {
                get {
                    return this.columnEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeCodeColumn {
                get {
                    return this.columnTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterShedColumn {
                get {
                    return this.columnWaterShed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RiverNameColumn {
                get {
                    return this.columnRiverName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KitNumberColumn {
                get {
                    return this.columnKitNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganizationNameColumn {
                get {
                    return this.columnOrganizationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationNumberColumn {
                get {
                    return this.columnStationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StationNameColumn {
                get {
                    return this.columnStationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleDateColumn {
                get {
                    return this.columnSampleDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RWWaterShedColumn {
                get {
                    return this.columnRWWaterShed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WQCCWaterShedColumn {
                get {
                    return this.columnWQCCWaterShed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterCodeColumn {
                get {
                    return this.columnWaterCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterBodyIDColumn {
                get {
                    return this.columnWaterBodyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterShedRegionColumn {
                get {
                    return this.columnWaterShedRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountyColumn {
                get {
                    return this.columnCounty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WaterShedGatheringColumn {
                get {
                    return this.columnWaterShedGathering;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectNameColumn {
                get {
                    return this.columnProjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectIDColumn {
                get {
                    return this.columnProjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn USGS_FlowColumn {
                get {
                    return this.columnUSGS_Flow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PHColumn {
                get {
                    return this.columnPH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TempCColumn {
                get {
                    return this.columnTempC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PHEN_ALKColumn {
                get {
                    return this.columnPHEN_ALK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_ALKColumn {
                get {
                    return this.columnTOTAL_ALK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TOTAL_HARDColumn {
                get {
                    return this.columnTOTAL_HARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DO_MGLColumn {
                get {
                    return this.columnDO_MGL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOSATColumn {
                get {
                    return this.columnDOSAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AL_DColumn {
                get {
                    return this.columnAL_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AL_TColumn {
                get {
                    return this.columnAL_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AS_DColumn {
                get {
                    return this.columnAS_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AS_TColumn {
                get {
                    return this.columnAS_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CA_DColumn {
                get {
                    return this.columnCA_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CA_TColumn {
                get {
                    return this.columnCA_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CD_DColumn {
                get {
                    return this.columnCD_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CD_TColumn {
                get {
                    return this.columnCD_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CU_DColumn {
                get {
                    return this.columnCU_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CU_TColumn {
                get {
                    return this.columnCU_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FE_DColumn {
                get {
                    return this.columnFE_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FE_TColumn {
                get {
                    return this.columnFE_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MG_DColumn {
                get {
                    return this.columnMG_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MG_TColumn {
                get {
                    return this.columnMG_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MN_DColumn {
                get {
                    return this.columnMN_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MN_TColumn {
                get {
                    return this.columnMN_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PB_DColumn {
                get {
                    return this.columnPB_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PB_TColumn {
                get {
                    return this.columnPB_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SE_DColumn {
                get {
                    return this.columnSE_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SE_TColumn {
                get {
                    return this.columnSE_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZN_DColumn {
                get {
                    return this.columnZN_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZN_TColumn {
                get {
                    return this.columnZN_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NA_DColumn {
                get {
                    return this.columnNA_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NA_TColumn {
                get {
                    return this.columnNA_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn K_DColumn {
                get {
                    return this.columnK_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn K_TColumn {
                get {
                    return this.columnK_T;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmmoniaColumn {
                get {
                    return this.columnAmmonia;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChlorideColumn {
                get {
                    return this.columnChloride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChlorophyllAColumn {
                get {
                    return this.columnChlorophyllA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOCColumn {
                get {
                    return this.columnDOC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NNColumn {
                get {
                    return this.columnNN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPColumn {
                get {
                    return this.columnOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SulfateColumn {
                get {
                    return this.columnSulfate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totNColumn {
                get {
                    return this.columntotN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totPColumn {
                get {
                    return this.columntotP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TKNColumn {
                get {
                    return this.columnTKN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orgNColumn {
                get {
                    return this.columnorgN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TSSColumn {
                get {
                    return this.columnTSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValidColumn {
                get {
                    return this.columnValid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRow this[int index] {
                get {
                    return ((viewRawSamplesAllRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event viewRawSamplesAllRowChangeEventHandler viewRawSamplesAllRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event viewRawSamplesAllRowChangeEventHandler viewRawSamplesAllRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event viewRawSamplesAllRowChangeEventHandler viewRawSamplesAllRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event viewRawSamplesAllRowChangeEventHandler viewRawSamplesAllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddviewRawSamplesAllRow(viewRawSamplesAllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRow AddviewRawSamplesAllRow(
                        string SampleNumber, 
                        string Event, 
                        string TypeCode, 
                        string WaterShed, 
                        string RiverName, 
                        int KitNumber, 
                        string OrganizationName, 
                        int StationNumber, 
                        string StationName, 
                        System.DateTime SampleDate, 
                        string RWWaterShed, 
                        string WQCCWaterShed, 
                        string WaterCode, 
                        string WaterBodyID, 
                        string WaterShedRegion, 
                        string County, 
                        string WaterShedGathering, 
                        string ProjectName, 
                        int ProjectID, 
                        double USGS_Flow, 
                        double PH, 
                        double TempC, 
                        double PHEN_ALK, 
                        double TOTAL_ALK, 
                        double TOTAL_HARD, 
                        double DO_MGL, 
                        int DOSAT, 
                        decimal AL_D, 
                        decimal AL_T, 
                        decimal AS_D, 
                        decimal AS_T, 
                        decimal CA_D, 
                        decimal CA_T, 
                        decimal CD_D, 
                        decimal CD_T, 
                        decimal CU_D, 
                        decimal CU_T, 
                        decimal FE_D, 
                        decimal FE_T, 
                        decimal MG_D, 
                        decimal MG_T, 
                        decimal MN_D, 
                        decimal MN_T, 
                        decimal PB_D, 
                        decimal PB_T, 
                        decimal SE_D, 
                        decimal SE_T, 
                        decimal ZN_D, 
                        decimal ZN_T, 
                        decimal NA_D, 
                        decimal NA_T, 
                        decimal K_D, 
                        decimal K_T, 
                        double Ammonia, 
                        double Chloride, 
                        double ChlorophyllA, 
                        double DOC, 
                        double NN, 
                        double OP, 
                        double Sulfate, 
                        double totN, 
                        double totP, 
                        double TKN, 
                        double orgN, 
                        double TSS, 
                        bool Valid) {
                viewRawSamplesAllRow rowviewRawSamplesAllRow = ((viewRawSamplesAllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SampleNumber,
                        Event,
                        TypeCode,
                        WaterShed,
                        RiverName,
                        KitNumber,
                        OrganizationName,
                        StationNumber,
                        StationName,
                        SampleDate,
                        RWWaterShed,
                        WQCCWaterShed,
                        WaterCode,
                        WaterBodyID,
                        WaterShedRegion,
                        County,
                        WaterShedGathering,
                        ProjectName,
                        ProjectID,
                        USGS_Flow,
                        PH,
                        TempC,
                        PHEN_ALK,
                        TOTAL_ALK,
                        TOTAL_HARD,
                        DO_MGL,
                        DOSAT,
                        AL_D,
                        AL_T,
                        AS_D,
                        AS_T,
                        CA_D,
                        CA_T,
                        CD_D,
                        CD_T,
                        CU_D,
                        CU_T,
                        FE_D,
                        FE_T,
                        MG_D,
                        MG_T,
                        MN_D,
                        MN_T,
                        PB_D,
                        PB_T,
                        SE_D,
                        SE_T,
                        ZN_D,
                        ZN_T,
                        NA_D,
                        NA_T,
                        K_D,
                        K_T,
                        Ammonia,
                        Chloride,
                        ChlorophyllA,
                        DOC,
                        NN,
                        OP,
                        Sulfate,
                        totN,
                        totP,
                        TKN,
                        orgN,
                        TSS,
                        Valid};
                rowviewRawSamplesAllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowviewRawSamplesAllRow);
                return rowviewRawSamplesAllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRow FindByProjectID(int ProjectID) {
                return ((viewRawSamplesAllRow)(this.Rows.Find(new object[] {
                            ProjectID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                viewRawSamplesAllDataTable cln = ((viewRawSamplesAllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new viewRawSamplesAllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSampleNumber = base.Columns["SampleNumber"];
                this.columnEvent = base.Columns["Event"];
                this.columnTypeCode = base.Columns["TypeCode"];
                this.columnWaterShed = base.Columns["WaterShed"];
                this.columnRiverName = base.Columns["RiverName"];
                this.columnKitNumber = base.Columns["KitNumber"];
                this.columnOrganizationName = base.Columns["OrganizationName"];
                this.columnStationNumber = base.Columns["StationNumber"];
                this.columnStationName = base.Columns["StationName"];
                this.columnSampleDate = base.Columns["SampleDate"];
                this.columnRWWaterShed = base.Columns["RWWaterShed"];
                this.columnWQCCWaterShed = base.Columns["WQCCWaterShed"];
                this.columnWaterCode = base.Columns["WaterCode"];
                this.columnWaterBodyID = base.Columns["WaterBodyID"];
                this.columnWaterShedRegion = base.Columns["WaterShedRegion"];
                this.columnCounty = base.Columns["County"];
                this.columnWaterShedGathering = base.Columns["WaterShedGathering"];
                this.columnProjectName = base.Columns["ProjectName"];
                this.columnProjectID = base.Columns["ProjectID"];
                this.columnUSGS_Flow = base.Columns["USGS_Flow"];
                this.columnPH = base.Columns["PH"];
                this.columnTempC = base.Columns["TempC"];
                this.columnPHEN_ALK = base.Columns["PHEN_ALK"];
                this.columnTOTAL_ALK = base.Columns["TOTAL_ALK"];
                this.columnTOTAL_HARD = base.Columns["TOTAL_HARD"];
                this.columnDO_MGL = base.Columns["DO_MGL"];
                this.columnDOSAT = base.Columns["DOSAT"];
                this.columnAL_D = base.Columns["AL_D"];
                this.columnAL_T = base.Columns["AL_T"];
                this.columnAS_D = base.Columns["AS_D"];
                this.columnAS_T = base.Columns["AS_T"];
                this.columnCA_D = base.Columns["CA_D"];
                this.columnCA_T = base.Columns["CA_T"];
                this.columnCD_D = base.Columns["CD_D"];
                this.columnCD_T = base.Columns["CD_T"];
                this.columnCU_D = base.Columns["CU_D"];
                this.columnCU_T = base.Columns["CU_T"];
                this.columnFE_D = base.Columns["FE_D"];
                this.columnFE_T = base.Columns["FE_T"];
                this.columnMG_D = base.Columns["MG_D"];
                this.columnMG_T = base.Columns["MG_T"];
                this.columnMN_D = base.Columns["MN_D"];
                this.columnMN_T = base.Columns["MN_T"];
                this.columnPB_D = base.Columns["PB_D"];
                this.columnPB_T = base.Columns["PB_T"];
                this.columnSE_D = base.Columns["SE_D"];
                this.columnSE_T = base.Columns["SE_T"];
                this.columnZN_D = base.Columns["ZN_D"];
                this.columnZN_T = base.Columns["ZN_T"];
                this.columnNA_D = base.Columns["NA_D"];
                this.columnNA_T = base.Columns["NA_T"];
                this.columnK_D = base.Columns["K_D"];
                this.columnK_T = base.Columns["K_T"];
                this.columnAmmonia = base.Columns["Ammonia"];
                this.columnChloride = base.Columns["Chloride"];
                this.columnChlorophyllA = base.Columns["ChlorophyllA"];
                this.columnDOC = base.Columns["DOC"];
                this.columnNN = base.Columns["NN"];
                this.columnOP = base.Columns["OP"];
                this.columnSulfate = base.Columns["Sulfate"];
                this.columntotN = base.Columns["totN"];
                this.columntotP = base.Columns["totP"];
                this.columnTKN = base.Columns["TKN"];
                this.columnorgN = base.Columns["orgN"];
                this.columnTSS = base.Columns["TSS"];
                this.columnValid = base.Columns["Valid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSampleNumber = new global::System.Data.DataColumn("SampleNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleNumber);
                this.columnEvent = new global::System.Data.DataColumn("Event", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEvent);
                this.columnTypeCode = new global::System.Data.DataColumn("TypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeCode);
                this.columnWaterShed = new global::System.Data.DataColumn("WaterShed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterShed);
                this.columnRiverName = new global::System.Data.DataColumn("RiverName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRiverName);
                this.columnKitNumber = new global::System.Data.DataColumn("KitNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitNumber);
                this.columnOrganizationName = new global::System.Data.DataColumn("OrganizationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizationName);
                this.columnStationNumber = new global::System.Data.DataColumn("StationNumber", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationNumber);
                this.columnStationName = new global::System.Data.DataColumn("StationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationName);
                this.columnSampleDate = new global::System.Data.DataColumn("SampleDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleDate);
                this.columnRWWaterShed = new global::System.Data.DataColumn("RWWaterShed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRWWaterShed);
                this.columnWQCCWaterShed = new global::System.Data.DataColumn("WQCCWaterShed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWQCCWaterShed);
                this.columnWaterCode = new global::System.Data.DataColumn("WaterCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterCode);
                this.columnWaterBodyID = new global::System.Data.DataColumn("WaterBodyID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterBodyID);
                this.columnWaterShedRegion = new global::System.Data.DataColumn("WaterShedRegion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterShedRegion);
                this.columnCounty = new global::System.Data.DataColumn("County", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCounty);
                this.columnWaterShedGathering = new global::System.Data.DataColumn("WaterShedGathering", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterShedGathering);
                this.columnProjectName = new global::System.Data.DataColumn("ProjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectName);
                this.columnProjectID = new global::System.Data.DataColumn("ProjectID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectID);
                this.columnUSGS_Flow = new global::System.Data.DataColumn("USGS_Flow", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSGS_Flow);
                this.columnPH = new global::System.Data.DataColumn("PH", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPH);
                this.columnTempC = new global::System.Data.DataColumn("TempC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempC);
                this.columnPHEN_ALK = new global::System.Data.DataColumn("PHEN_ALK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHEN_ALK);
                this.columnTOTAL_ALK = new global::System.Data.DataColumn("TOTAL_ALK", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_ALK);
                this.columnTOTAL_HARD = new global::System.Data.DataColumn("TOTAL_HARD", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_HARD);
                this.columnDO_MGL = new global::System.Data.DataColumn("DO_MGL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDO_MGL);
                this.columnDOSAT = new global::System.Data.DataColumn("DOSAT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOSAT);
                this.columnAL_D = new global::System.Data.DataColumn("AL_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAL_D);
                this.columnAL_T = new global::System.Data.DataColumn("AL_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAL_T);
                this.columnAS_D = new global::System.Data.DataColumn("AS_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAS_D);
                this.columnAS_T = new global::System.Data.DataColumn("AS_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAS_T);
                this.columnCA_D = new global::System.Data.DataColumn("CA_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCA_D);
                this.columnCA_T = new global::System.Data.DataColumn("CA_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCA_T);
                this.columnCD_D = new global::System.Data.DataColumn("CD_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_D);
                this.columnCD_T = new global::System.Data.DataColumn("CD_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCD_T);
                this.columnCU_D = new global::System.Data.DataColumn("CU_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCU_D);
                this.columnCU_T = new global::System.Data.DataColumn("CU_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCU_T);
                this.columnFE_D = new global::System.Data.DataColumn("FE_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE_D);
                this.columnFE_T = new global::System.Data.DataColumn("FE_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFE_T);
                this.columnMG_D = new global::System.Data.DataColumn("MG_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMG_D);
                this.columnMG_T = new global::System.Data.DataColumn("MG_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMG_T);
                this.columnMN_D = new global::System.Data.DataColumn("MN_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMN_D);
                this.columnMN_T = new global::System.Data.DataColumn("MN_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMN_T);
                this.columnPB_D = new global::System.Data.DataColumn("PB_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB_D);
                this.columnPB_T = new global::System.Data.DataColumn("PB_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB_T);
                this.columnSE_D = new global::System.Data.DataColumn("SE_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSE_D);
                this.columnSE_T = new global::System.Data.DataColumn("SE_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSE_T);
                this.columnZN_D = new global::System.Data.DataColumn("ZN_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZN_D);
                this.columnZN_T = new global::System.Data.DataColumn("ZN_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZN_T);
                this.columnNA_D = new global::System.Data.DataColumn("NA_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNA_D);
                this.columnNA_T = new global::System.Data.DataColumn("NA_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNA_T);
                this.columnK_D = new global::System.Data.DataColumn("K_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnK_D);
                this.columnK_T = new global::System.Data.DataColumn("K_T", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnK_T);
                this.columnAmmonia = new global::System.Data.DataColumn("Ammonia", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmmonia);
                this.columnChloride = new global::System.Data.DataColumn("Chloride", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChloride);
                this.columnChlorophyllA = new global::System.Data.DataColumn("ChlorophyllA", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChlorophyllA);
                this.columnDOC = new global::System.Data.DataColumn("DOC", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOC);
                this.columnNN = new global::System.Data.DataColumn("NN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNN);
                this.columnOP = new global::System.Data.DataColumn("OP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOP);
                this.columnSulfate = new global::System.Data.DataColumn("Sulfate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSulfate);
                this.columntotN = new global::System.Data.DataColumn("totN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotN);
                this.columntotP = new global::System.Data.DataColumn("totP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotP);
                this.columnTKN = new global::System.Data.DataColumn("TKN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTKN);
                this.columnorgN = new global::System.Data.DataColumn("orgN", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorgN);
                this.columnTSS = new global::System.Data.DataColumn("TSS", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTSS);
                this.columnValid = new global::System.Data.DataColumn("Valid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnProjectID}, true));
                this.columnSampleNumber.AllowDBNull = false;
                this.columnSampleNumber.MaxLength = 50;
                this.columnEvent.AllowDBNull = false;
                this.columnEvent.MaxLength = 12;
                this.columnTypeCode.MaxLength = 5;
                this.columnWaterShed.MaxLength = 3;
                this.columnRiverName.MaxLength = 17;
                this.columnOrganizationName.MaxLength = 50;
                this.columnStationName.MaxLength = 50;
                this.columnRWWaterShed.MaxLength = 2;
                this.columnWQCCWaterShed.MaxLength = 25;
                this.columnWaterCode.MaxLength = 5;
                this.columnWaterBodyID.MaxLength = 25;
                this.columnWaterShedRegion.MaxLength = 25;
                this.columnCounty.MaxLength = 25;
                this.columnWaterShedGathering.MaxLength = 50;
                this.columnProjectName.AllowDBNull = false;
                this.columnProjectName.MaxLength = 50;
                this.columnProjectID.AllowDBNull = false;
                this.columnProjectID.Unique = true;
                this.columnValid.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRow NewviewRawSamplesAllRow() {
                return ((viewRawSamplesAllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new viewRawSamplesAllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(viewRawSamplesAllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.viewRawSamplesAllRowChanged != null)) {
                    this.viewRawSamplesAllRowChanged(this, new viewRawSamplesAllRowChangeEvent(((viewRawSamplesAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.viewRawSamplesAllRowChanging != null)) {
                    this.viewRawSamplesAllRowChanging(this, new viewRawSamplesAllRowChangeEvent(((viewRawSamplesAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.viewRawSamplesAllRowDeleted != null)) {
                    this.viewRawSamplesAllRowDeleted(this, new viewRawSamplesAllRowChangeEvent(((viewRawSamplesAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.viewRawSamplesAllRowDeleting != null)) {
                    this.viewRawSamplesAllRowDeleting(this, new viewRawSamplesAllRowChangeEvent(((viewRawSamplesAllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveviewRawSamplesAllRow(viewRawSamplesAllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RawSamplesDataSet ds = new RawSamplesDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "viewRawSamplesAllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class viewRawSamplesAllRow : global::System.Data.DataRow {
            
            private viewRawSamplesAllDataTable tableviewRawSamplesAll;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal viewRawSamplesAllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableviewRawSamplesAll = ((viewRawSamplesAllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleNumber {
                get {
                    return ((string)(this[this.tableviewRawSamplesAll.SampleNumberColumn]));
                }
                set {
                    this[this.tableviewRawSamplesAll.SampleNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Event {
                get {
                    return ((string)(this[this.tableviewRawSamplesAll.EventColumn]));
                }
                set {
                    this[this.tableviewRawSamplesAll.EventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeCode {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.TypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeCode\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaterShed {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WaterShedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterShed\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WaterShedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RiverName {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.RiverNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RiverName\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.RiverNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int KitNumber {
                get {
                    try {
                        return ((int)(this[this.tableviewRawSamplesAll.KitNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitNumber\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.KitNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrganizationName {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.OrganizationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrganizationName\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.OrganizationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StationNumber {
                get {
                    try {
                        return ((int)(this[this.tableviewRawSamplesAll.StationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StationNumber\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.StationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StationName {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.StationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StationName\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.StationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SampleDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableviewRawSamplesAll.SampleDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleDate\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.SampleDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RWWaterShed {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.RWWaterShedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RWWaterShed\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.RWWaterShedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WQCCWaterShed {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WQCCWaterShedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WQCCWaterShed\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WQCCWaterShedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaterCode {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WaterCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterCode\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WaterCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaterBodyID {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WaterBodyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterBodyID\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WaterBodyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaterShedRegion {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WaterShedRegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterShedRegion\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WaterShedRegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string County {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.CountyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'County\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CountyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WaterShedGathering {
                get {
                    try {
                        return ((string)(this[this.tableviewRawSamplesAll.WaterShedGatheringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterShedGathering\' in table \'viewRawSamplesAll\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.WaterShedGatheringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProjectName {
                get {
                    return ((string)(this[this.tableviewRawSamplesAll.ProjectNameColumn]));
                }
                set {
                    this[this.tableviewRawSamplesAll.ProjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProjectID {
                get {
                    return ((int)(this[this.tableviewRawSamplesAll.ProjectIDColumn]));
                }
                set {
                    this[this.tableviewRawSamplesAll.ProjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double USGS_Flow {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.USGS_FlowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USGS_Flow\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.USGS_FlowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PH {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.PHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PH\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.PHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TempC {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.TempCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempC\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TempCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PHEN_ALK {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.PHEN_ALKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PHEN_ALK\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.PHEN_ALKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TOTAL_ALK {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.TOTAL_ALKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_ALK\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TOTAL_ALKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TOTAL_HARD {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.TOTAL_HARDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TOTAL_HARD\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TOTAL_HARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DO_MGL {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.DO_MGLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DO_MGL\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.DO_MGLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DOSAT {
                get {
                    try {
                        return ((int)(this[this.tableviewRawSamplesAll.DOSATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOSAT\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.DOSATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AL_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.AL_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AL_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.AL_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AL_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.AL_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AL_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.AL_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AS_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.AS_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AS_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.AS_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AS_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.AS_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AS_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.AS_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CA_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CA_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CA_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CA_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CA_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CA_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CA_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CA_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CD_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CD_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CD_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CD_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CD_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CD_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CD_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CD_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CU_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CU_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CU_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CU_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CU_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.CU_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CU_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.CU_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FE_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.FE_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.FE_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FE_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.FE_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FE_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.FE_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MG_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.MG_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MG_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.MG_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MG_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.MG_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MG_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.MG_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MN_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.MN_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MN_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.MN_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MN_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.MN_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MN_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.MN_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PB_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.PB_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PB_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.PB_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PB_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.PB_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PB_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.PB_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SE_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.SE_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SE_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.SE_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SE_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.SE_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SE_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.SE_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ZN_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.ZN_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZN_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.ZN_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ZN_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.ZN_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ZN_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.ZN_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NA_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.NA_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NA_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.NA_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NA_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.NA_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NA_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.NA_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal K_D {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.K_DColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'K_D\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.K_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal K_T {
                get {
                    try {
                        return ((decimal)(this[this.tableviewRawSamplesAll.K_TColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'K_T\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.K_TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Ammonia {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.AmmoniaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ammonia\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.AmmoniaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Chloride {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.ChlorideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chloride\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.ChlorideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ChlorophyllA {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.ChlorophyllAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChlorophyllA\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.ChlorophyllAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DOC {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.DOCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOC\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.DOCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NN {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.NNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NN\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.NNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double OP {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.OPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OP\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.OPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sulfate {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.SulfateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sulfate\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.SulfateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double totN {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.totNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totN\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.totNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double totP {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.totPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totP\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.totPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TKN {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.TKNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TKN\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TKNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double orgN {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.orgNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orgN\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.orgNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TSS {
                get {
                    try {
                        return ((double)(this[this.tableviewRawSamplesAll.TSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TSS\' in table \'viewRawSamplesAll\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableviewRawSamplesAll.TSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Valid {
                get {
                    return ((bool)(this[this.tableviewRawSamplesAll.ValidColumn]));
                }
                set {
                    this[this.tableviewRawSamplesAll.ValidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeNull() {
                this[this.tableviewRawSamplesAll.TypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterShedNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WaterShedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterShedNull() {
                this[this.tableviewRawSamplesAll.WaterShedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRiverNameNull() {
                return this.IsNull(this.tableviewRawSamplesAll.RiverNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRiverNameNull() {
                this[this.tableviewRawSamplesAll.RiverNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKitNumberNull() {
                return this.IsNull(this.tableviewRawSamplesAll.KitNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKitNumberNull() {
                this[this.tableviewRawSamplesAll.KitNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrganizationNameNull() {
                return this.IsNull(this.tableviewRawSamplesAll.OrganizationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrganizationNameNull() {
                this[this.tableviewRawSamplesAll.OrganizationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStationNumberNull() {
                return this.IsNull(this.tableviewRawSamplesAll.StationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStationNumberNull() {
                this[this.tableviewRawSamplesAll.StationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStationNameNull() {
                return this.IsNull(this.tableviewRawSamplesAll.StationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStationNameNull() {
                this[this.tableviewRawSamplesAll.StationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleDateNull() {
                return this.IsNull(this.tableviewRawSamplesAll.SampleDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleDateNull() {
                this[this.tableviewRawSamplesAll.SampleDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRWWaterShedNull() {
                return this.IsNull(this.tableviewRawSamplesAll.RWWaterShedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRWWaterShedNull() {
                this[this.tableviewRawSamplesAll.RWWaterShedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWQCCWaterShedNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WQCCWaterShedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWQCCWaterShedNull() {
                this[this.tableviewRawSamplesAll.WQCCWaterShedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterCodeNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WaterCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterCodeNull() {
                this[this.tableviewRawSamplesAll.WaterCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterBodyIDNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WaterBodyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterBodyIDNull() {
                this[this.tableviewRawSamplesAll.WaterBodyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterShedRegionNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WaterShedRegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterShedRegionNull() {
                this[this.tableviewRawSamplesAll.WaterShedRegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountyNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CountyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountyNull() {
                this[this.tableviewRawSamplesAll.CountyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaterShedGatheringNull() {
                return this.IsNull(this.tableviewRawSamplesAll.WaterShedGatheringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaterShedGatheringNull() {
                this[this.tableviewRawSamplesAll.WaterShedGatheringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUSGS_FlowNull() {
                return this.IsNull(this.tableviewRawSamplesAll.USGS_FlowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUSGS_FlowNull() {
                this[this.tableviewRawSamplesAll.USGS_FlowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPHNull() {
                return this.IsNull(this.tableviewRawSamplesAll.PHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPHNull() {
                this[this.tableviewRawSamplesAll.PHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTempCNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TempCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTempCNull() {
                this[this.tableviewRawSamplesAll.TempCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPHEN_ALKNull() {
                return this.IsNull(this.tableviewRawSamplesAll.PHEN_ALKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPHEN_ALKNull() {
                this[this.tableviewRawSamplesAll.PHEN_ALKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_ALKNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TOTAL_ALKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_ALKNull() {
                this[this.tableviewRawSamplesAll.TOTAL_ALKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTOTAL_HARDNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TOTAL_HARDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTOTAL_HARDNull() {
                this[this.tableviewRawSamplesAll.TOTAL_HARDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDO_MGLNull() {
                return this.IsNull(this.tableviewRawSamplesAll.DO_MGLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDO_MGLNull() {
                this[this.tableviewRawSamplesAll.DO_MGLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOSATNull() {
                return this.IsNull(this.tableviewRawSamplesAll.DOSATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOSATNull() {
                this[this.tableviewRawSamplesAll.DOSATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAL_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.AL_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAL_DNull() {
                this[this.tableviewRawSamplesAll.AL_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAL_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.AL_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAL_TNull() {
                this[this.tableviewRawSamplesAll.AL_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAS_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.AS_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAS_DNull() {
                this[this.tableviewRawSamplesAll.AS_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAS_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.AS_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAS_TNull() {
                this[this.tableviewRawSamplesAll.AS_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCA_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CA_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCA_DNull() {
                this[this.tableviewRawSamplesAll.CA_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCA_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CA_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCA_TNull() {
                this[this.tableviewRawSamplesAll.CA_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCD_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CD_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCD_DNull() {
                this[this.tableviewRawSamplesAll.CD_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCD_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CD_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCD_TNull() {
                this[this.tableviewRawSamplesAll.CD_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCU_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CU_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCU_DNull() {
                this[this.tableviewRawSamplesAll.CU_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCU_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.CU_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCU_TNull() {
                this[this.tableviewRawSamplesAll.CU_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFE_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.FE_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFE_DNull() {
                this[this.tableviewRawSamplesAll.FE_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFE_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.FE_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFE_TNull() {
                this[this.tableviewRawSamplesAll.FE_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMG_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.MG_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMG_DNull() {
                this[this.tableviewRawSamplesAll.MG_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMG_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.MG_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMG_TNull() {
                this[this.tableviewRawSamplesAll.MG_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMN_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.MN_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMN_DNull() {
                this[this.tableviewRawSamplesAll.MN_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMN_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.MN_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMN_TNull() {
                this[this.tableviewRawSamplesAll.MN_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPB_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.PB_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPB_DNull() {
                this[this.tableviewRawSamplesAll.PB_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPB_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.PB_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPB_TNull() {
                this[this.tableviewRawSamplesAll.PB_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSE_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.SE_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSE_DNull() {
                this[this.tableviewRawSamplesAll.SE_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSE_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.SE_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSE_TNull() {
                this[this.tableviewRawSamplesAll.SE_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZN_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.ZN_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZN_DNull() {
                this[this.tableviewRawSamplesAll.ZN_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZN_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.ZN_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZN_TNull() {
                this[this.tableviewRawSamplesAll.ZN_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNA_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.NA_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNA_DNull() {
                this[this.tableviewRawSamplesAll.NA_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNA_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.NA_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNA_TNull() {
                this[this.tableviewRawSamplesAll.NA_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsK_DNull() {
                return this.IsNull(this.tableviewRawSamplesAll.K_DColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetK_DNull() {
                this[this.tableviewRawSamplesAll.K_DColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsK_TNull() {
                return this.IsNull(this.tableviewRawSamplesAll.K_TColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetK_TNull() {
                this[this.tableviewRawSamplesAll.K_TColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmmoniaNull() {
                return this.IsNull(this.tableviewRawSamplesAll.AmmoniaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmmoniaNull() {
                this[this.tableviewRawSamplesAll.AmmoniaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChlorideNull() {
                return this.IsNull(this.tableviewRawSamplesAll.ChlorideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChlorideNull() {
                this[this.tableviewRawSamplesAll.ChlorideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChlorophyllANull() {
                return this.IsNull(this.tableviewRawSamplesAll.ChlorophyllAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChlorophyllANull() {
                this[this.tableviewRawSamplesAll.ChlorophyllAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOCNull() {
                return this.IsNull(this.tableviewRawSamplesAll.DOCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOCNull() {
                this[this.tableviewRawSamplesAll.DOCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNNNull() {
                return this.IsNull(this.tableviewRawSamplesAll.NNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNNNull() {
                this[this.tableviewRawSamplesAll.NNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPNull() {
                return this.IsNull(this.tableviewRawSamplesAll.OPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPNull() {
                this[this.tableviewRawSamplesAll.OPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSulfateNull() {
                return this.IsNull(this.tableviewRawSamplesAll.SulfateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSulfateNull() {
                this[this.tableviewRawSamplesAll.SulfateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotNNull() {
                return this.IsNull(this.tableviewRawSamplesAll.totNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotNNull() {
                this[this.tableviewRawSamplesAll.totNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotPNull() {
                return this.IsNull(this.tableviewRawSamplesAll.totPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotPNull() {
                this[this.tableviewRawSamplesAll.totPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTKNNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TKNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTKNNull() {
                this[this.tableviewRawSamplesAll.TKNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorgNNull() {
                return this.IsNull(this.tableviewRawSamplesAll.orgNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorgNNull() {
                this[this.tableviewRawSamplesAll.orgNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTSSNull() {
                return this.IsNull(this.tableviewRawSamplesAll.TSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTSSNull() {
                this[this.tableviewRawSamplesAll.TSSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class viewRawSamplesAllRowChangeEvent : global::System.EventArgs {
            
            private viewRawSamplesAllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRowChangeEvent(viewRawSamplesAllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public viewRawSamplesAllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RWInbound2.RawSamplesDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class viewRawSamplesAllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public viewRawSamplesAllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "viewRawSamplesAll";
            tableMapping.ColumnMappings.Add("SampleNumber", "SampleNumber");
            tableMapping.ColumnMappings.Add("Event", "Event");
            tableMapping.ColumnMappings.Add("TypeCode", "TypeCode");
            tableMapping.ColumnMappings.Add("WaterShed", "WaterShed");
            tableMapping.ColumnMappings.Add("RiverName", "RiverName");
            tableMapping.ColumnMappings.Add("KitNumber", "KitNumber");
            tableMapping.ColumnMappings.Add("OrganizationName", "OrganizationName");
            tableMapping.ColumnMappings.Add("StationNumber", "StationNumber");
            tableMapping.ColumnMappings.Add("StationName", "StationName");
            tableMapping.ColumnMappings.Add("SampleDate", "SampleDate");
            tableMapping.ColumnMappings.Add("RWWaterShed", "RWWaterShed");
            tableMapping.ColumnMappings.Add("WQCCWaterShed", "WQCCWaterShed");
            tableMapping.ColumnMappings.Add("WaterCode", "WaterCode");
            tableMapping.ColumnMappings.Add("WaterBodyID", "WaterBodyID");
            tableMapping.ColumnMappings.Add("WaterShedRegion", "WaterShedRegion");
            tableMapping.ColumnMappings.Add("County", "County");
            tableMapping.ColumnMappings.Add("WaterShedGathering", "WaterShedGathering");
            tableMapping.ColumnMappings.Add("ProjectName", "ProjectName");
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID");
            tableMapping.ColumnMappings.Add("USGS_Flow", "USGS_Flow");
            tableMapping.ColumnMappings.Add("PH", "PH");
            tableMapping.ColumnMappings.Add("TempC", "TempC");
            tableMapping.ColumnMappings.Add("PHEN_ALK", "PHEN_ALK");
            tableMapping.ColumnMappings.Add("TOTAL_ALK", "TOTAL_ALK");
            tableMapping.ColumnMappings.Add("TOTAL_HARD", "TOTAL_HARD");
            tableMapping.ColumnMappings.Add("DO_MGL", "DO_MGL");
            tableMapping.ColumnMappings.Add("DOSAT", "DOSAT");
            tableMapping.ColumnMappings.Add("AL_D", "AL_D");
            tableMapping.ColumnMappings.Add("AL_T", "AL_T");
            tableMapping.ColumnMappings.Add("AS_D", "AS_D");
            tableMapping.ColumnMappings.Add("AS_T", "AS_T");
            tableMapping.ColumnMappings.Add("CA_D", "CA_D");
            tableMapping.ColumnMappings.Add("CA_T", "CA_T");
            tableMapping.ColumnMappings.Add("CD_D", "CD_D");
            tableMapping.ColumnMappings.Add("CD_T", "CD_T");
            tableMapping.ColumnMappings.Add("CU_D", "CU_D");
            tableMapping.ColumnMappings.Add("CU_T", "CU_T");
            tableMapping.ColumnMappings.Add("FE_D", "FE_D");
            tableMapping.ColumnMappings.Add("FE_T", "FE_T");
            tableMapping.ColumnMappings.Add("MG_D", "MG_D");
            tableMapping.ColumnMappings.Add("MG_T", "MG_T");
            tableMapping.ColumnMappings.Add("MN_D", "MN_D");
            tableMapping.ColumnMappings.Add("MN_T", "MN_T");
            tableMapping.ColumnMappings.Add("PB_D", "PB_D");
            tableMapping.ColumnMappings.Add("PB_T", "PB_T");
            tableMapping.ColumnMappings.Add("SE_D", "SE_D");
            tableMapping.ColumnMappings.Add("SE_T", "SE_T");
            tableMapping.ColumnMappings.Add("ZN_D", "ZN_D");
            tableMapping.ColumnMappings.Add("ZN_T", "ZN_T");
            tableMapping.ColumnMappings.Add("NA_D", "NA_D");
            tableMapping.ColumnMappings.Add("NA_T", "NA_T");
            tableMapping.ColumnMappings.Add("K_D", "K_D");
            tableMapping.ColumnMappings.Add("K_T", "K_T");
            tableMapping.ColumnMappings.Add("Ammonia", "Ammonia");
            tableMapping.ColumnMappings.Add("Chloride", "Chloride");
            tableMapping.ColumnMappings.Add("ChlorophyllA", "ChlorophyllA");
            tableMapping.ColumnMappings.Add("DOC", "DOC");
            tableMapping.ColumnMappings.Add("NN", "NN");
            tableMapping.ColumnMappings.Add("OP", "OP");
            tableMapping.ColumnMappings.Add("Sulfate", "Sulfate");
            tableMapping.ColumnMappings.Add("totN", "totN");
            tableMapping.ColumnMappings.Add("totP", "totP");
            tableMapping.ColumnMappings.Add("TKN", "TKN");
            tableMapping.ColumnMappings.Add("orgN", "orgN");
            tableMapping.ColumnMappings.Add("TSS", "TSS");
            tableMapping.ColumnMappings.Add("Valid", "Valid");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["RiverWatchDEV"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SampleNumber, Event, TypeCode, WaterShed, RiverName, KitNumber, OrganizationName, StationNumber, StationName, SampleDate, RWWaterShed, WQCCWaterShed, WaterCode, WaterBodyID, WaterShedRegion, County, WaterShedGathering, ProjectName, ProjectID, USGS_Flow, PH, TempC, PHEN_ALK, TOTAL_ALK, TOTAL_HARD, DO_MGL, DOSAT, AL_D, AL_T, AS_D, AS_T, CA_D, CA_T, CD_D, CD_T, CU_D, CU_T, FE_D, FE_T, MG_D, MG_T, MN_D, MN_T, PB_D, PB_T, SE_D, SE_T, ZN_D, ZN_T, NA_D, NA_T, K_D, K_T, Ammonia, Chloride, ChlorophyllA, DOC, NN, OP, Sulfate, totN, totP, TKN, orgN, TSS, Valid FROM dbo.viewRawSamplesAll";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RawSamplesDataSet.viewRawSamplesAllDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RawSamplesDataSet.viewRawSamplesAllDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RawSamplesDataSet.viewRawSamplesAllDataTable dataTable = new RawSamplesDataSet.viewRawSamplesAllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(RawSamplesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(RawSamplesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(RawSamplesDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(RawSamplesDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591