//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RWInbound2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RiverWatchDataSetOrgStatus")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RiverWatchDataSetOrgStatus : global::System.Data.DataSet {
        
        private OrgStatusDataTable tableOrgStatus;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public RiverWatchDataSetOrgStatus() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected RiverWatchDataSetOrgStatus(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["OrgStatus"] != null)) {
                    base.Tables.Add(new OrgStatusDataTable(ds.Tables["OrgStatus"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OrgStatusDataTable OrgStatus {
            get {
                return this.tableOrgStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            RiverWatchDataSetOrgStatus cln = ((RiverWatchDataSetOrgStatus)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["OrgStatus"] != null)) {
                    base.Tables.Add(new OrgStatusDataTable(ds.Tables["OrgStatus"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableOrgStatus = ((OrgStatusDataTable)(base.Tables["OrgStatus"]));
            if ((initTable == true)) {
                if ((this.tableOrgStatus != null)) {
                    this.tableOrgStatus.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "RiverWatchDataSetOrgStatus";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RiverWatchDataSetOrgStatus.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableOrgStatus = new OrgStatusDataTable();
            base.Tables.Add(this.tableOrgStatus);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOrgStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RiverWatchDataSetOrgStatus ds = new RiverWatchDataSetOrgStatus();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OrgStatusRowChangeEventHandler(object sender, OrgStatusRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OrgStatusDataTable : global::System.Data.TypedTableBase<OrgStatusRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnOrganizationID;
            
            private global::System.Data.DataColumn columnContractStartDate;
            
            private global::System.Data.DataColumn columnContractEndDate;
            
            private global::System.Data.DataColumn columnContractSigned;
            
            private global::System.Data.DataColumn columnContractSignedDate;
            
            private global::System.Data.DataColumn columnSiteVisited;
            
            private global::System.Data.DataColumn columnVolunteerTimeSheet1;
            
            private global::System.Data.DataColumn columnVolunteerTimeShee2;
            
            private global::System.Data.DataColumn columnVolunteerTimeSheet3;
            
            private global::System.Data.DataColumn columnVolunteerTimeSheet4;
            
            private global::System.Data.DataColumn columnDataEnteredElectronically1;
            
            private global::System.Data.DataColumn columnDataEnteredElectronically2;
            
            private global::System.Data.DataColumn columnDataEnteredElectronically3;
            
            private global::System.Data.DataColumn columnDataEnteredElectronically4;
            
            private global::System.Data.DataColumn columnSampleShipped1;
            
            private global::System.Data.DataColumn columnSampleShipped2;
            
            private global::System.Data.DataColumn columnSampleShipped3;
            
            private global::System.Data.DataColumn columnSampleShipped4;
            
            private global::System.Data.DataColumn columnNumberOfSamplesJan;
            
            private global::System.Data.DataColumn columnNumberOfSamplesFeb;
            
            private global::System.Data.DataColumn columnNumberOfSamplesMar;
            
            private global::System.Data.DataColumn columnNumberOfSamplesApr;
            
            private global::System.Data.DataColumn columnNumberOfSamplesMay;
            
            private global::System.Data.DataColumn columnNumberOfSamplesJun;
            
            private global::System.Data.DataColumn columnNumberOfSamplesJul;
            
            private global::System.Data.DataColumn columnNumberOfSamplesAug;
            
            private global::System.Data.DataColumn columnNumberOfSamplesSep;
            
            private global::System.Data.DataColumn columnNumberOfSamplesOct;
            
            private global::System.Data.DataColumn columnNumberOfSamplesNov;
            
            private global::System.Data.DataColumn columnNumberOfSamplesDec;
            
            private global::System.Data.DataColumn columnNutrient1Collected;
            
            private global::System.Data.DataColumn columnNutrient2Collected;
            
            private global::System.Data.DataColumn columnBugCollected;
            
            private global::System.Data.DataColumn columnUnknownSpringRecordedDate;
            
            private global::System.Data.DataColumn columnUnknownFallRecordedDate;
            
            private global::System.Data.DataColumn columnNumberOfSamplesBlank;
            
            private global::System.Data.DataColumn columnNumberOfSamplesDuplicate;
            
            private global::System.Data.DataColumn columnTroubleComment;
            
            private global::System.Data.DataColumn columnNoteComment;
            
            private global::System.Data.DataColumn columnHardshipComment;
            
            private global::System.Data.DataColumn columnDateCreated;
            
            private global::System.Data.DataColumn columnUserCreated;
            
            private global::System.Data.DataColumn columnDateLastModified;
            
            private global::System.Data.DataColumn columnUserLastModified;
            
            private global::System.Data.DataColumn columnNumberOfMetalsBlank;
            
            private global::System.Data.DataColumn columnNumberOfMetalsDuplicate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusDataTable() {
                this.TableName = "OrgStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrgStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OrgStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrganizationIDColumn {
                get {
                    return this.columnOrganizationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractStartDateColumn {
                get {
                    return this.columnContractStartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractEndDateColumn {
                get {
                    return this.columnContractEndDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractSignedColumn {
                get {
                    return this.columnContractSigned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractSignedDateColumn {
                get {
                    return this.columnContractSignedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SiteVisitedColumn {
                get {
                    return this.columnSiteVisited;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolunteerTimeSheet1Column {
                get {
                    return this.columnVolunteerTimeSheet1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolunteerTimeShee2Column {
                get {
                    return this.columnVolunteerTimeShee2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolunteerTimeSheet3Column {
                get {
                    return this.columnVolunteerTimeSheet3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VolunteerTimeSheet4Column {
                get {
                    return this.columnVolunteerTimeSheet4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataEnteredElectronically1Column {
                get {
                    return this.columnDataEnteredElectronically1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataEnteredElectronically2Column {
                get {
                    return this.columnDataEnteredElectronically2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataEnteredElectronically3Column {
                get {
                    return this.columnDataEnteredElectronically3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataEnteredElectronically4Column {
                get {
                    return this.columnDataEnteredElectronically4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleShipped1Column {
                get {
                    return this.columnSampleShipped1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleShipped2Column {
                get {
                    return this.columnSampleShipped2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleShipped3Column {
                get {
                    return this.columnSampleShipped3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleShipped4Column {
                get {
                    return this.columnSampleShipped4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesJanColumn {
                get {
                    return this.columnNumberOfSamplesJan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesFebColumn {
                get {
                    return this.columnNumberOfSamplesFeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesMarColumn {
                get {
                    return this.columnNumberOfSamplesMar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesAprColumn {
                get {
                    return this.columnNumberOfSamplesApr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesMayColumn {
                get {
                    return this.columnNumberOfSamplesMay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesJunColumn {
                get {
                    return this.columnNumberOfSamplesJun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesJulColumn {
                get {
                    return this.columnNumberOfSamplesJul;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesAugColumn {
                get {
                    return this.columnNumberOfSamplesAug;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesSepColumn {
                get {
                    return this.columnNumberOfSamplesSep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesOctColumn {
                get {
                    return this.columnNumberOfSamplesOct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesNovColumn {
                get {
                    return this.columnNumberOfSamplesNov;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesDecColumn {
                get {
                    return this.columnNumberOfSamplesDec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nutrient1CollectedColumn {
                get {
                    return this.columnNutrient1Collected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nutrient2CollectedColumn {
                get {
                    return this.columnNutrient2Collected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BugCollectedColumn {
                get {
                    return this.columnBugCollected;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnknownSpringRecordedDateColumn {
                get {
                    return this.columnUnknownSpringRecordedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnknownFallRecordedDateColumn {
                get {
                    return this.columnUnknownFallRecordedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesBlankColumn {
                get {
                    return this.columnNumberOfSamplesBlank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfSamplesDuplicateColumn {
                get {
                    return this.columnNumberOfSamplesDuplicate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TroubleCommentColumn {
                get {
                    return this.columnTroubleComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NoteCommentColumn {
                get {
                    return this.columnNoteComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HardshipCommentColumn {
                get {
                    return this.columnHardshipComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreatedColumn {
                get {
                    return this.columnDateCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserCreatedColumn {
                get {
                    return this.columnUserCreated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateLastModifiedColumn {
                get {
                    return this.columnDateLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserLastModifiedColumn {
                get {
                    return this.columnUserLastModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfMetalsBlankColumn {
                get {
                    return this.columnNumberOfMetalsBlank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfMetalsDuplicateColumn {
                get {
                    return this.columnNumberOfMetalsDuplicate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRow this[int index] {
                get {
                    return ((OrgStatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrgStatusRowChangeEventHandler OrgStatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrgStatusRowChangeEventHandler OrgStatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrgStatusRowChangeEventHandler OrgStatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OrgStatusRowChangeEventHandler OrgStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOrgStatusRow(OrgStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRow AddOrgStatusRow(
                        int OrganizationID, 
                        System.DateTime ContractStartDate, 
                        System.DateTime ContractEndDate, 
                        bool ContractSigned, 
                        System.DateTime ContractSignedDate, 
                        bool SiteVisited, 
                        bool VolunteerTimeSheet1, 
                        bool VolunteerTimeShee2, 
                        bool VolunteerTimeSheet3, 
                        bool VolunteerTimeSheet4, 
                        bool DataEnteredElectronically1, 
                        bool DataEnteredElectronically2, 
                        bool DataEnteredElectronically3, 
                        bool DataEnteredElectronically4, 
                        bool SampleShipped1, 
                        bool SampleShipped2, 
                        bool SampleShipped3, 
                        bool SampleShipped4, 
                        int NumberOfSamplesJan, 
                        int NumberOfSamplesFeb, 
                        int NumberOfSamplesMar, 
                        int NumberOfSamplesApr, 
                        int NumberOfSamplesMay, 
                        int NumberOfSamplesJun, 
                        int NumberOfSamplesJul, 
                        int NumberOfSamplesAug, 
                        int NumberOfSamplesSep, 
                        int NumberOfSamplesOct, 
                        int NumberOfSamplesNov, 
                        int NumberOfSamplesDec, 
                        bool Nutrient1Collected, 
                        bool Nutrient2Collected, 
                        bool BugCollected, 
                        System.DateTime UnknownSpringRecordedDate, 
                        System.DateTime UnknownFallRecordedDate, 
                        int NumberOfSamplesBlank, 
                        int NumberOfSamplesDuplicate, 
                        string TroubleComment, 
                        string NoteComment, 
                        string HardshipComment, 
                        System.DateTime DateCreated, 
                        string UserCreated, 
                        System.DateTime DateLastModified, 
                        string UserLastModified, 
                        int NumberOfMetalsBlank, 
                        int NumberOfMetalsDuplicate) {
                OrgStatusRow rowOrgStatusRow = ((OrgStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        OrganizationID,
                        ContractStartDate,
                        ContractEndDate,
                        ContractSigned,
                        ContractSignedDate,
                        SiteVisited,
                        VolunteerTimeSheet1,
                        VolunteerTimeShee2,
                        VolunteerTimeSheet3,
                        VolunteerTimeSheet4,
                        DataEnteredElectronically1,
                        DataEnteredElectronically2,
                        DataEnteredElectronically3,
                        DataEnteredElectronically4,
                        SampleShipped1,
                        SampleShipped2,
                        SampleShipped3,
                        SampleShipped4,
                        NumberOfSamplesJan,
                        NumberOfSamplesFeb,
                        NumberOfSamplesMar,
                        NumberOfSamplesApr,
                        NumberOfSamplesMay,
                        NumberOfSamplesJun,
                        NumberOfSamplesJul,
                        NumberOfSamplesAug,
                        NumberOfSamplesSep,
                        NumberOfSamplesOct,
                        NumberOfSamplesNov,
                        NumberOfSamplesDec,
                        Nutrient1Collected,
                        Nutrient2Collected,
                        BugCollected,
                        UnknownSpringRecordedDate,
                        UnknownFallRecordedDate,
                        NumberOfSamplesBlank,
                        NumberOfSamplesDuplicate,
                        TroubleComment,
                        NoteComment,
                        HardshipComment,
                        DateCreated,
                        UserCreated,
                        DateLastModified,
                        UserLastModified,
                        NumberOfMetalsBlank,
                        NumberOfMetalsDuplicate};
                rowOrgStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOrgStatusRow);
                return rowOrgStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRow FindByID(int ID) {
                return ((OrgStatusRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OrgStatusDataTable cln = ((OrgStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OrgStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnOrganizationID = base.Columns["OrganizationID"];
                this.columnContractStartDate = base.Columns["ContractStartDate"];
                this.columnContractEndDate = base.Columns["ContractEndDate"];
                this.columnContractSigned = base.Columns["ContractSigned"];
                this.columnContractSignedDate = base.Columns["ContractSignedDate"];
                this.columnSiteVisited = base.Columns["SiteVisited"];
                this.columnVolunteerTimeSheet1 = base.Columns["VolunteerTimeSheet1"];
                this.columnVolunteerTimeShee2 = base.Columns["VolunteerTimeShee2"];
                this.columnVolunteerTimeSheet3 = base.Columns["VolunteerTimeSheet3"];
                this.columnVolunteerTimeSheet4 = base.Columns["VolunteerTimeSheet4"];
                this.columnDataEnteredElectronically1 = base.Columns["DataEnteredElectronically1"];
                this.columnDataEnteredElectronically2 = base.Columns["DataEnteredElectronically2"];
                this.columnDataEnteredElectronically3 = base.Columns["DataEnteredElectronically3"];
                this.columnDataEnteredElectronically4 = base.Columns["DataEnteredElectronically4"];
                this.columnSampleShipped1 = base.Columns["SampleShipped1"];
                this.columnSampleShipped2 = base.Columns["SampleShipped2"];
                this.columnSampleShipped3 = base.Columns["SampleShipped3"];
                this.columnSampleShipped4 = base.Columns["SampleShipped4"];
                this.columnNumberOfSamplesJan = base.Columns["NumberOfSamplesJan"];
                this.columnNumberOfSamplesFeb = base.Columns["NumberOfSamplesFeb"];
                this.columnNumberOfSamplesMar = base.Columns["NumberOfSamplesMar"];
                this.columnNumberOfSamplesApr = base.Columns["NumberOfSamplesApr"];
                this.columnNumberOfSamplesMay = base.Columns["NumberOfSamplesMay"];
                this.columnNumberOfSamplesJun = base.Columns["NumberOfSamplesJun"];
                this.columnNumberOfSamplesJul = base.Columns["NumberOfSamplesJul"];
                this.columnNumberOfSamplesAug = base.Columns["NumberOfSamplesAug"];
                this.columnNumberOfSamplesSep = base.Columns["NumberOfSamplesSep"];
                this.columnNumberOfSamplesOct = base.Columns["NumberOfSamplesOct"];
                this.columnNumberOfSamplesNov = base.Columns["NumberOfSamplesNov"];
                this.columnNumberOfSamplesDec = base.Columns["NumberOfSamplesDec"];
                this.columnNutrient1Collected = base.Columns["Nutrient1Collected"];
                this.columnNutrient2Collected = base.Columns["Nutrient2Collected"];
                this.columnBugCollected = base.Columns["BugCollected"];
                this.columnUnknownSpringRecordedDate = base.Columns["UnknownSpringRecordedDate"];
                this.columnUnknownFallRecordedDate = base.Columns["UnknownFallRecordedDate"];
                this.columnNumberOfSamplesBlank = base.Columns["NumberOfSamplesBlank"];
                this.columnNumberOfSamplesDuplicate = base.Columns["NumberOfSamplesDuplicate"];
                this.columnTroubleComment = base.Columns["TroubleComment"];
                this.columnNoteComment = base.Columns["NoteComment"];
                this.columnHardshipComment = base.Columns["HardshipComment"];
                this.columnDateCreated = base.Columns["DateCreated"];
                this.columnUserCreated = base.Columns["UserCreated"];
                this.columnDateLastModified = base.Columns["DateLastModified"];
                this.columnUserLastModified = base.Columns["UserLastModified"];
                this.columnNumberOfMetalsBlank = base.Columns["NumberOfMetalsBlank"];
                this.columnNumberOfMetalsDuplicate = base.Columns["NumberOfMetalsDuplicate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnOrganizationID = new global::System.Data.DataColumn("OrganizationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrganizationID);
                this.columnContractStartDate = new global::System.Data.DataColumn("ContractStartDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractStartDate);
                this.columnContractEndDate = new global::System.Data.DataColumn("ContractEndDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractEndDate);
                this.columnContractSigned = new global::System.Data.DataColumn("ContractSigned", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSigned);
                this.columnContractSignedDate = new global::System.Data.DataColumn("ContractSignedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractSignedDate);
                this.columnSiteVisited = new global::System.Data.DataColumn("SiteVisited", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSiteVisited);
                this.columnVolunteerTimeSheet1 = new global::System.Data.DataColumn("VolunteerTimeSheet1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerTimeSheet1);
                this.columnVolunteerTimeShee2 = new global::System.Data.DataColumn("VolunteerTimeShee2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerTimeShee2);
                this.columnVolunteerTimeSheet3 = new global::System.Data.DataColumn("VolunteerTimeSheet3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerTimeSheet3);
                this.columnVolunteerTimeSheet4 = new global::System.Data.DataColumn("VolunteerTimeSheet4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVolunteerTimeSheet4);
                this.columnDataEnteredElectronically1 = new global::System.Data.DataColumn("DataEnteredElectronically1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEnteredElectronically1);
                this.columnDataEnteredElectronically2 = new global::System.Data.DataColumn("DataEnteredElectronically2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEnteredElectronically2);
                this.columnDataEnteredElectronically3 = new global::System.Data.DataColumn("DataEnteredElectronically3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEnteredElectronically3);
                this.columnDataEnteredElectronically4 = new global::System.Data.DataColumn("DataEnteredElectronically4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataEnteredElectronically4);
                this.columnSampleShipped1 = new global::System.Data.DataColumn("SampleShipped1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleShipped1);
                this.columnSampleShipped2 = new global::System.Data.DataColumn("SampleShipped2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleShipped2);
                this.columnSampleShipped3 = new global::System.Data.DataColumn("SampleShipped3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleShipped3);
                this.columnSampleShipped4 = new global::System.Data.DataColumn("SampleShipped4", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleShipped4);
                this.columnNumberOfSamplesJan = new global::System.Data.DataColumn("NumberOfSamplesJan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesJan);
                this.columnNumberOfSamplesFeb = new global::System.Data.DataColumn("NumberOfSamplesFeb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesFeb);
                this.columnNumberOfSamplesMar = new global::System.Data.DataColumn("NumberOfSamplesMar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesMar);
                this.columnNumberOfSamplesApr = new global::System.Data.DataColumn("NumberOfSamplesApr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesApr);
                this.columnNumberOfSamplesMay = new global::System.Data.DataColumn("NumberOfSamplesMay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesMay);
                this.columnNumberOfSamplesJun = new global::System.Data.DataColumn("NumberOfSamplesJun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesJun);
                this.columnNumberOfSamplesJul = new global::System.Data.DataColumn("NumberOfSamplesJul", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesJul);
                this.columnNumberOfSamplesAug = new global::System.Data.DataColumn("NumberOfSamplesAug", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesAug);
                this.columnNumberOfSamplesSep = new global::System.Data.DataColumn("NumberOfSamplesSep", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesSep);
                this.columnNumberOfSamplesOct = new global::System.Data.DataColumn("NumberOfSamplesOct", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesOct);
                this.columnNumberOfSamplesNov = new global::System.Data.DataColumn("NumberOfSamplesNov", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesNov);
                this.columnNumberOfSamplesDec = new global::System.Data.DataColumn("NumberOfSamplesDec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesDec);
                this.columnNutrient1Collected = new global::System.Data.DataColumn("Nutrient1Collected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNutrient1Collected);
                this.columnNutrient2Collected = new global::System.Data.DataColumn("Nutrient2Collected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNutrient2Collected);
                this.columnBugCollected = new global::System.Data.DataColumn("BugCollected", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBugCollected);
                this.columnUnknownSpringRecordedDate = new global::System.Data.DataColumn("UnknownSpringRecordedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnknownSpringRecordedDate);
                this.columnUnknownFallRecordedDate = new global::System.Data.DataColumn("UnknownFallRecordedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnknownFallRecordedDate);
                this.columnNumberOfSamplesBlank = new global::System.Data.DataColumn("NumberOfSamplesBlank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesBlank);
                this.columnNumberOfSamplesDuplicate = new global::System.Data.DataColumn("NumberOfSamplesDuplicate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfSamplesDuplicate);
                this.columnTroubleComment = new global::System.Data.DataColumn("TroubleComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTroubleComment);
                this.columnNoteComment = new global::System.Data.DataColumn("NoteComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoteComment);
                this.columnHardshipComment = new global::System.Data.DataColumn("HardshipComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHardshipComment);
                this.columnDateCreated = new global::System.Data.DataColumn("DateCreated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreated);
                this.columnUserCreated = new global::System.Data.DataColumn("UserCreated", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserCreated);
                this.columnDateLastModified = new global::System.Data.DataColumn("DateLastModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLastModified);
                this.columnUserLastModified = new global::System.Data.DataColumn("UserLastModified", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLastModified);
                this.columnNumberOfMetalsBlank = new global::System.Data.DataColumn("NumberOfMetalsBlank", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfMetalsBlank);
                this.columnNumberOfMetalsDuplicate = new global::System.Data.DataColumn("NumberOfMetalsDuplicate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfMetalsDuplicate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnOrganizationID.AllowDBNull = false;
                this.columnTroubleComment.MaxLength = 1000;
                this.columnNoteComment.MaxLength = 1000;
                this.columnHardshipComment.MaxLength = 1000;
                this.columnUserCreated.MaxLength = 50;
                this.columnUserLastModified.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRow NewOrgStatusRow() {
                return ((OrgStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OrgStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OrgStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OrgStatusRowChanged != null)) {
                    this.OrgStatusRowChanged(this, new OrgStatusRowChangeEvent(((OrgStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OrgStatusRowChanging != null)) {
                    this.OrgStatusRowChanging(this, new OrgStatusRowChangeEvent(((OrgStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OrgStatusRowDeleted != null)) {
                    this.OrgStatusRowDeleted(this, new OrgStatusRowChangeEvent(((OrgStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OrgStatusRowDeleting != null)) {
                    this.OrgStatusRowDeleting(this, new OrgStatusRowChangeEvent(((OrgStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOrgStatusRow(OrgStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RiverWatchDataSetOrgStatus ds = new RiverWatchDataSetOrgStatus();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OrgStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OrgStatusRow : global::System.Data.DataRow {
            
            private OrgStatusDataTable tableOrgStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OrgStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOrgStatus = ((OrgStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableOrgStatus.IDColumn]));
                }
                set {
                    this[this.tableOrgStatus.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OrganizationID {
                get {
                    return ((int)(this[this.tableOrgStatus.OrganizationIDColumn]));
                }
                set {
                    this[this.tableOrgStatus.OrganizationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ContractStartDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.ContractStartDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractStartDate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.ContractStartDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ContractEndDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.ContractEndDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractEndDate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.ContractEndDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ContractSigned {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.ContractSignedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractSigned\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.ContractSignedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ContractSignedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.ContractSignedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractSignedDate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.ContractSignedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SiteVisited {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.SiteVisitedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SiteVisited\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.SiteVisitedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VolunteerTimeSheet1 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.VolunteerTimeSheet1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolunteerTimeSheet1\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.VolunteerTimeSheet1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VolunteerTimeShee2 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.VolunteerTimeShee2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolunteerTimeShee2\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.VolunteerTimeShee2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VolunteerTimeSheet3 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.VolunteerTimeSheet3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolunteerTimeSheet3\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.VolunteerTimeSheet3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool VolunteerTimeSheet4 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.VolunteerTimeSheet4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VolunteerTimeSheet4\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.VolunteerTimeSheet4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DataEnteredElectronically1 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.DataEnteredElectronically1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEnteredElectronically1\' in table \'OrgStatus\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DataEnteredElectronically1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DataEnteredElectronically2 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.DataEnteredElectronically2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEnteredElectronically2\' in table \'OrgStatus\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DataEnteredElectronically2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DataEnteredElectronically3 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.DataEnteredElectronically3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEnteredElectronically3\' in table \'OrgStatus\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DataEnteredElectronically3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DataEnteredElectronically4 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.DataEnteredElectronically4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataEnteredElectronically4\' in table \'OrgStatus\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DataEnteredElectronically4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SampleShipped1 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.SampleShipped1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleShipped1\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.SampleShipped1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SampleShipped2 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.SampleShipped2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleShipped2\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.SampleShipped2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SampleShipped3 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.SampleShipped3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleShipped3\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.SampleShipped3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SampleShipped4 {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.SampleShipped4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleShipped4\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.SampleShipped4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesJan {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesJanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesJan\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesJanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesFeb {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesFebColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesFeb\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesFebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesMar {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesMarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesMar\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesMarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesApr {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesAprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesApr\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesAprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesMay {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesMayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesMay\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesMayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesJun {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesJunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesJun\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesJunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesJul {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesJulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesJul\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesJulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesAug {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesAugColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesAug\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesAugColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesSep {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesSepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesSep\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesSepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesOct {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesOctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesOct\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesOctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesNov {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesNovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesNov\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesNovColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesDec {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesDecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesDec\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesDecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Nutrient1Collected {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.Nutrient1CollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nutrient1Collected\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.Nutrient1CollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Nutrient2Collected {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.Nutrient2CollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nutrient2Collected\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.Nutrient2CollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BugCollected {
                get {
                    try {
                        return ((bool)(this[this.tableOrgStatus.BugCollectedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BugCollected\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.BugCollectedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UnknownSpringRecordedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.UnknownSpringRecordedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnknownSpringRecordedDate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.UnknownSpringRecordedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime UnknownFallRecordedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.UnknownFallRecordedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnknownFallRecordedDate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.UnknownFallRecordedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesBlank {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesBlankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesBlank\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesBlankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfSamplesDuplicate {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfSamplesDuplicateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfSamplesDuplicate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfSamplesDuplicateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TroubleComment {
                get {
                    try {
                        return ((string)(this[this.tableOrgStatus.TroubleCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TroubleComment\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.TroubleCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NoteComment {
                get {
                    try {
                        return ((string)(this[this.tableOrgStatus.NoteCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoteComment\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NoteCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HardshipComment {
                get {
                    try {
                        return ((string)(this[this.tableOrgStatus.HardshipCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HardshipComment\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.HardshipCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreated {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.DateCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateCreated\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DateCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserCreated {
                get {
                    try {
                        return ((string)(this[this.tableOrgStatus.UserCreatedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserCreated\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.UserCreatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateLastModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOrgStatus.DateLastModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateLastModified\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.DateLastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserLastModified {
                get {
                    try {
                        return ((string)(this[this.tableOrgStatus.UserLastModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserLastModified\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.UserLastModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfMetalsBlank {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfMetalsBlankColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfMetalsBlank\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfMetalsBlankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfMetalsDuplicate {
                get {
                    try {
                        return ((int)(this[this.tableOrgStatus.NumberOfMetalsDuplicateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfMetalsDuplicate\' in table \'OrgStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOrgStatus.NumberOfMetalsDuplicateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractStartDateNull() {
                return this.IsNull(this.tableOrgStatus.ContractStartDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractStartDateNull() {
                this[this.tableOrgStatus.ContractStartDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractEndDateNull() {
                return this.IsNull(this.tableOrgStatus.ContractEndDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractEndDateNull() {
                this[this.tableOrgStatus.ContractEndDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractSignedNull() {
                return this.IsNull(this.tableOrgStatus.ContractSignedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractSignedNull() {
                this[this.tableOrgStatus.ContractSignedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractSignedDateNull() {
                return this.IsNull(this.tableOrgStatus.ContractSignedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractSignedDateNull() {
                this[this.tableOrgStatus.ContractSignedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSiteVisitedNull() {
                return this.IsNull(this.tableOrgStatus.SiteVisitedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSiteVisitedNull() {
                this[this.tableOrgStatus.SiteVisitedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolunteerTimeSheet1Null() {
                return this.IsNull(this.tableOrgStatus.VolunteerTimeSheet1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolunteerTimeSheet1Null() {
                this[this.tableOrgStatus.VolunteerTimeSheet1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolunteerTimeShee2Null() {
                return this.IsNull(this.tableOrgStatus.VolunteerTimeShee2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolunteerTimeShee2Null() {
                this[this.tableOrgStatus.VolunteerTimeShee2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolunteerTimeSheet3Null() {
                return this.IsNull(this.tableOrgStatus.VolunteerTimeSheet3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolunteerTimeSheet3Null() {
                this[this.tableOrgStatus.VolunteerTimeSheet3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVolunteerTimeSheet4Null() {
                return this.IsNull(this.tableOrgStatus.VolunteerTimeSheet4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVolunteerTimeSheet4Null() {
                this[this.tableOrgStatus.VolunteerTimeSheet4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataEnteredElectronically1Null() {
                return this.IsNull(this.tableOrgStatus.DataEnteredElectronically1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataEnteredElectronically1Null() {
                this[this.tableOrgStatus.DataEnteredElectronically1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataEnteredElectronically2Null() {
                return this.IsNull(this.tableOrgStatus.DataEnteredElectronically2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataEnteredElectronically2Null() {
                this[this.tableOrgStatus.DataEnteredElectronically2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataEnteredElectronically3Null() {
                return this.IsNull(this.tableOrgStatus.DataEnteredElectronically3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataEnteredElectronically3Null() {
                this[this.tableOrgStatus.DataEnteredElectronically3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataEnteredElectronically4Null() {
                return this.IsNull(this.tableOrgStatus.DataEnteredElectronically4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataEnteredElectronically4Null() {
                this[this.tableOrgStatus.DataEnteredElectronically4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleShipped1Null() {
                return this.IsNull(this.tableOrgStatus.SampleShipped1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleShipped1Null() {
                this[this.tableOrgStatus.SampleShipped1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleShipped2Null() {
                return this.IsNull(this.tableOrgStatus.SampleShipped2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleShipped2Null() {
                this[this.tableOrgStatus.SampleShipped2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleShipped3Null() {
                return this.IsNull(this.tableOrgStatus.SampleShipped3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleShipped3Null() {
                this[this.tableOrgStatus.SampleShipped3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleShipped4Null() {
                return this.IsNull(this.tableOrgStatus.SampleShipped4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleShipped4Null() {
                this[this.tableOrgStatus.SampleShipped4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesJanNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesJanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesJanNull() {
                this[this.tableOrgStatus.NumberOfSamplesJanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesFebNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesFebColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesFebNull() {
                this[this.tableOrgStatus.NumberOfSamplesFebColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesMarNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesMarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesMarNull() {
                this[this.tableOrgStatus.NumberOfSamplesMarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesAprNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesAprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesAprNull() {
                this[this.tableOrgStatus.NumberOfSamplesAprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesMayNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesMayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesMayNull() {
                this[this.tableOrgStatus.NumberOfSamplesMayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesJunNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesJunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesJunNull() {
                this[this.tableOrgStatus.NumberOfSamplesJunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesJulNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesJulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesJulNull() {
                this[this.tableOrgStatus.NumberOfSamplesJulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesAugNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesAugColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesAugNull() {
                this[this.tableOrgStatus.NumberOfSamplesAugColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesSepNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesSepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesSepNull() {
                this[this.tableOrgStatus.NumberOfSamplesSepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesOctNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesOctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesOctNull() {
                this[this.tableOrgStatus.NumberOfSamplesOctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesNovNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesNovColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesNovNull() {
                this[this.tableOrgStatus.NumberOfSamplesNovColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesDecNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesDecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesDecNull() {
                this[this.tableOrgStatus.NumberOfSamplesDecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNutrient1CollectedNull() {
                return this.IsNull(this.tableOrgStatus.Nutrient1CollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNutrient1CollectedNull() {
                this[this.tableOrgStatus.Nutrient1CollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNutrient2CollectedNull() {
                return this.IsNull(this.tableOrgStatus.Nutrient2CollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNutrient2CollectedNull() {
                this[this.tableOrgStatus.Nutrient2CollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBugCollectedNull() {
                return this.IsNull(this.tableOrgStatus.BugCollectedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBugCollectedNull() {
                this[this.tableOrgStatus.BugCollectedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnknownSpringRecordedDateNull() {
                return this.IsNull(this.tableOrgStatus.UnknownSpringRecordedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnknownSpringRecordedDateNull() {
                this[this.tableOrgStatus.UnknownSpringRecordedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnknownFallRecordedDateNull() {
                return this.IsNull(this.tableOrgStatus.UnknownFallRecordedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnknownFallRecordedDateNull() {
                this[this.tableOrgStatus.UnknownFallRecordedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesBlankNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesBlankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesBlankNull() {
                this[this.tableOrgStatus.NumberOfSamplesBlankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfSamplesDuplicateNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfSamplesDuplicateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfSamplesDuplicateNull() {
                this[this.tableOrgStatus.NumberOfSamplesDuplicateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTroubleCommentNull() {
                return this.IsNull(this.tableOrgStatus.TroubleCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTroubleCommentNull() {
                this[this.tableOrgStatus.TroubleCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNoteCommentNull() {
                return this.IsNull(this.tableOrgStatus.NoteCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNoteCommentNull() {
                this[this.tableOrgStatus.NoteCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHardshipCommentNull() {
                return this.IsNull(this.tableOrgStatus.HardshipCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHardshipCommentNull() {
                this[this.tableOrgStatus.HardshipCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreatedNull() {
                return this.IsNull(this.tableOrgStatus.DateCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreatedNull() {
                this[this.tableOrgStatus.DateCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserCreatedNull() {
                return this.IsNull(this.tableOrgStatus.UserCreatedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserCreatedNull() {
                this[this.tableOrgStatus.UserCreatedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateLastModifiedNull() {
                return this.IsNull(this.tableOrgStatus.DateLastModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateLastModifiedNull() {
                this[this.tableOrgStatus.DateLastModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserLastModifiedNull() {
                return this.IsNull(this.tableOrgStatus.UserLastModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserLastModifiedNull() {
                this[this.tableOrgStatus.UserLastModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfMetalsBlankNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfMetalsBlankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfMetalsBlankNull() {
                this[this.tableOrgStatus.NumberOfMetalsBlankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfMetalsDuplicateNull() {
                return this.IsNull(this.tableOrgStatus.NumberOfMetalsDuplicateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfMetalsDuplicateNull() {
                this[this.tableOrgStatus.NumberOfMetalsDuplicateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OrgStatusRowChangeEvent : global::System.EventArgs {
            
            private OrgStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRowChangeEvent(OrgStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OrgStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RWInbound2.RiverWatchDataSetOrgStatusTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OrgStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OrgStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OrgStatus";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("OrganizationID", "OrganizationID");
            tableMapping.ColumnMappings.Add("ContractStartDate", "ContractStartDate");
            tableMapping.ColumnMappings.Add("ContractEndDate", "ContractEndDate");
            tableMapping.ColumnMappings.Add("ContractSigned", "ContractSigned");
            tableMapping.ColumnMappings.Add("ContractSignedDate", "ContractSignedDate");
            tableMapping.ColumnMappings.Add("SiteVisited", "SiteVisited");
            tableMapping.ColumnMappings.Add("VolunteerTimeSheet1", "VolunteerTimeSheet1");
            tableMapping.ColumnMappings.Add("VolunteerTimeShee2", "VolunteerTimeShee2");
            tableMapping.ColumnMappings.Add("VolunteerTimeSheet3", "VolunteerTimeSheet3");
            tableMapping.ColumnMappings.Add("VolunteerTimeSheet4", "VolunteerTimeSheet4");
            tableMapping.ColumnMappings.Add("DataEnteredElectronically1", "DataEnteredElectronically1");
            tableMapping.ColumnMappings.Add("DataEnteredElectronically2", "DataEnteredElectronically2");
            tableMapping.ColumnMappings.Add("DataEnteredElectronically3", "DataEnteredElectronically3");
            tableMapping.ColumnMappings.Add("DataEnteredElectronically4", "DataEnteredElectronically4");
            tableMapping.ColumnMappings.Add("SampleShipped1", "SampleShipped1");
            tableMapping.ColumnMappings.Add("SampleShipped2", "SampleShipped2");
            tableMapping.ColumnMappings.Add("SampleShipped3", "SampleShipped3");
            tableMapping.ColumnMappings.Add("SampleShipped4", "SampleShipped4");
            tableMapping.ColumnMappings.Add("NumberOfSamplesJan", "NumberOfSamplesJan");
            tableMapping.ColumnMappings.Add("NumberOfSamplesFeb", "NumberOfSamplesFeb");
            tableMapping.ColumnMappings.Add("NumberOfSamplesMar", "NumberOfSamplesMar");
            tableMapping.ColumnMappings.Add("NumberOfSamplesApr", "NumberOfSamplesApr");
            tableMapping.ColumnMappings.Add("NumberOfSamplesMay", "NumberOfSamplesMay");
            tableMapping.ColumnMappings.Add("NumberOfSamplesJun", "NumberOfSamplesJun");
            tableMapping.ColumnMappings.Add("NumberOfSamplesJul", "NumberOfSamplesJul");
            tableMapping.ColumnMappings.Add("NumberOfSamplesAug", "NumberOfSamplesAug");
            tableMapping.ColumnMappings.Add("NumberOfSamplesSep", "NumberOfSamplesSep");
            tableMapping.ColumnMappings.Add("NumberOfSamplesOct", "NumberOfSamplesOct");
            tableMapping.ColumnMappings.Add("NumberOfSamplesNov", "NumberOfSamplesNov");
            tableMapping.ColumnMappings.Add("NumberOfSamplesDec", "NumberOfSamplesDec");
            tableMapping.ColumnMappings.Add("Nutrient1Collected", "Nutrient1Collected");
            tableMapping.ColumnMappings.Add("Nutrient2Collected", "Nutrient2Collected");
            tableMapping.ColumnMappings.Add("BugCollected", "BugCollected");
            tableMapping.ColumnMappings.Add("UnknownSpringRecordedDate", "UnknownSpringRecordedDate");
            tableMapping.ColumnMappings.Add("UnknownFallRecordedDate", "UnknownFallRecordedDate");
            tableMapping.ColumnMappings.Add("NumberOfSamplesBlank", "NumberOfSamplesBlank");
            tableMapping.ColumnMappings.Add("NumberOfSamplesDuplicate", "NumberOfSamplesDuplicate");
            tableMapping.ColumnMappings.Add("TroubleComment", "TroubleComment");
            tableMapping.ColumnMappings.Add("NoteComment", "NoteComment");
            tableMapping.ColumnMappings.Add("HardshipComment", "HardshipComment");
            tableMapping.ColumnMappings.Add("DateCreated", "DateCreated");
            tableMapping.ColumnMappings.Add("UserCreated", "UserCreated");
            tableMapping.ColumnMappings.Add("DateLastModified", "DateLastModified");
            tableMapping.ColumnMappings.Add("UserLastModified", "UserLastModified");
            tableMapping.ColumnMappings.Add("NumberOfMetalsBlank", "NumberOfMetalsBlank");
            tableMapping.ColumnMappings.Add("NumberOfMetalsDuplicate", "NumberOfMetalsDuplicate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[OrgStatus] WHERE (([ID] = @Original_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[OrgStatus] ([OrganizationID], [ContractStartDate], [ContractEn" +
                "dDate], [ContractSigned], [ContractSignedDate], [SiteVisited], [VolunteerTimeShe" +
                "et1], [VolunteerTimeShee2], [VolunteerTimeSheet3], [VolunteerTimeSheet4], [DataE" +
                "nteredElectronically1], [DataEnteredElectronically2], [DataEnteredElectronically" +
                "3], [DataEnteredElectronically4], [SampleShipped1], [SampleShipped2], [SampleShi" +
                "pped3], [SampleShipped4], [NumberOfSamplesJan], [NumberOfSamplesFeb], [NumberOfS" +
                "amplesMar], [NumberOfSamplesApr], [NumberOfSamplesMay], [NumberOfSamplesJun], [N" +
                "umberOfSamplesJul], [NumberOfSamplesAug], [NumberOfSamplesSep], [NumberOfSamples" +
                "Oct], [NumberOfSamplesNov], [NumberOfSamplesDec], [Nutrient1Collected], [Nutrien" +
                "t2Collected], [BugCollected], [UnknownSpringRecordedDate], [UnknownFallRecordedD" +
                "ate], [NumberOfSamplesBlank], [NumberOfSamplesDuplicate], [TroubleComment], [Not" +
                "eComment], [HardshipComment], [DateCreated], [UserCreated], [DateLastModified], " +
                "[UserLastModified], [NumberOfMetalsBlank], [NumberOfMetalsDuplicate]) VALUES (@O" +
                "rganizationID, @ContractStartDate, @ContractEndDate, @ContractSigned, @ContractS" +
                "ignedDate, @SiteVisited, @VolunteerTimeSheet1, @VolunteerTimeShee2, @VolunteerTi" +
                "meSheet3, @VolunteerTimeSheet4, @DataEnteredElectronically1, @DataEnteredElectro" +
                "nically2, @DataEnteredElectronically3, @DataEnteredElectronically4, @SampleShipp" +
                "ed1, @SampleShipped2, @SampleShipped3, @SampleShipped4, @NumberOfSamplesJan, @Nu" +
                "mberOfSamplesFeb, @NumberOfSamplesMar, @NumberOfSamplesApr, @NumberOfSamplesMay," +
                " @NumberOfSamplesJun, @NumberOfSamplesJul, @NumberOfSamplesAug, @NumberOfSamples" +
                "Sep, @NumberOfSamplesOct, @NumberOfSamplesNov, @NumberOfSamplesDec, @Nutrient1Co" +
                "llected, @Nutrient2Collected, @BugCollected, @UnknownSpringRecordedDate, @Unknow" +
                "nFallRecordedDate, @NumberOfSamplesBlank, @NumberOfSamplesDuplicate, @TroubleCom" +
                "ment, @NoteComment, @HardshipComment, @DateCreated, @UserCreated, @DateLastModif" +
                "ied, @UserLastModified, @NumberOfMetalsBlank, @NumberOfMetalsDuplicate)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganizationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSignedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractSignedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteVisited", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteVisited", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeShee2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeShee2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesFeb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesFeb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesMar", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesMar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesApr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesApr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesMay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesMay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJul", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJul", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesAug", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesAug", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesSep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesSep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesOct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesOct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesNov", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesNov", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesDec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesDec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nutrient1Collected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nutrient1Collected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nutrient2Collected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nutrient2Collected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BugCollected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BugCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnknownSpringRecordedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnknownSpringRecordedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnknownFallRecordedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnknownFallRecordedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesBlank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesBlank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesDuplicate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesDuplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TroubleComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TroubleComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoteComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoteComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HardshipComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HardshipComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateLastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateLastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLastModified", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfMetalsBlank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfMetalsBlank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfMetalsDuplicate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfMetalsDuplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[OrgStatus] SET [OrganizationID] = @OrganizationID, [ContractStartDa" +
                "te] = @ContractStartDate, [ContractEndDate] = @ContractEndDate, [ContractSigned]" +
                " = @ContractSigned, [ContractSignedDate] = @ContractSignedDate, [SiteVisited] = " +
                "@SiteVisited, [VolunteerTimeSheet1] = @VolunteerTimeSheet1, [VolunteerTimeShee2]" +
                " = @VolunteerTimeShee2, [VolunteerTimeSheet3] = @VolunteerTimeSheet3, [Volunteer" +
                "TimeSheet4] = @VolunteerTimeSheet4, [DataEnteredElectronically1] = @DataEnteredE" +
                "lectronically1, [DataEnteredElectronically2] = @DataEnteredElectronically2, [Dat" +
                "aEnteredElectronically3] = @DataEnteredElectronically3, [DataEnteredElectronical" +
                "ly4] = @DataEnteredElectronically4, [SampleShipped1] = @SampleShipped1, [SampleS" +
                "hipped2] = @SampleShipped2, [SampleShipped3] = @SampleShipped3, [SampleShipped4]" +
                " = @SampleShipped4, [NumberOfSamplesJan] = @NumberOfSamplesJan, [NumberOfSamples" +
                "Feb] = @NumberOfSamplesFeb, [NumberOfSamplesMar] = @NumberOfSamplesMar, [NumberO" +
                "fSamplesApr] = @NumberOfSamplesApr, [NumberOfSamplesMay] = @NumberOfSamplesMay, " +
                "[NumberOfSamplesJun] = @NumberOfSamplesJun, [NumberOfSamplesJul] = @NumberOfSamp" +
                "lesJul, [NumberOfSamplesAug] = @NumberOfSamplesAug, [NumberOfSamplesSep] = @Numb" +
                "erOfSamplesSep, [NumberOfSamplesOct] = @NumberOfSamplesOct, [NumberOfSamplesNov]" +
                " = @NumberOfSamplesNov, [NumberOfSamplesDec] = @NumberOfSamplesDec, [Nutrient1Co" +
                "llected] = @Nutrient1Collected, [Nutrient2Collected] = @Nutrient2Collected, [Bug" +
                "Collected] = @BugCollected, [UnknownSpringRecordedDate] = @UnknownSpringRecorded" +
                "Date, [UnknownFallRecordedDate] = @UnknownFallRecordedDate, [NumberOfSamplesBlan" +
                "k] = @NumberOfSamplesBlank, [NumberOfSamplesDuplicate] = @NumberOfSamplesDuplica" +
                "te, [TroubleComment] = @TroubleComment, [NoteComment] = @NoteComment, [HardshipC" +
                "omment] = @HardshipComment, [DateCreated] = @DateCreated, [UserCreated] = @UserC" +
                "reated, [DateLastModified] = @DateLastModified, [UserLastModified] = @UserLastMo" +
                "dified, [NumberOfMetalsBlank] = @NumberOfMetalsBlank, [NumberOfMetalsDuplicate] " +
                "= @NumberOfMetalsDuplicate WHERE (([ID] = @Original_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OrganizationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OrganizationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractStartDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractStartDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractEndDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractEndDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSigned", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractSigned", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractSignedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractSignedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SiteVisited", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SiteVisited", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeShee2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeShee2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VolunteerTimeSheet4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VolunteerTimeSheet4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DataEnteredElectronically4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DataEnteredElectronically4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped3", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SampleShipped4", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SampleShipped4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJan", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJan", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesFeb", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesFeb", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesMar", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesMar", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesApr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesApr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesMay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesMay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJun", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJun", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesJul", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesJul", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesAug", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesAug", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesSep", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesSep", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesOct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesOct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesNov", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesNov", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesDec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesDec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nutrient1Collected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nutrient1Collected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nutrient2Collected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nutrient2Collected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BugCollected", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BugCollected", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnknownSpringRecordedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnknownSpringRecordedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UnknownFallRecordedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UnknownFallRecordedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesBlank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesBlank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfSamplesDuplicate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfSamplesDuplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TroubleComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TroubleComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NoteComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NoteComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HardshipComment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HardshipComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateCreated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserCreated", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserCreated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateLastModified", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateLastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserLastModified", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserLastModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfMetalsBlank", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfMetalsBlank", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NumberOfMetalsDuplicate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NumberOfMetalsDuplicate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["RiverWatchDEV"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, OrganizationID, ContractStartDate, ContractEndDate, ContractSigned, ContractSignedDate, SiteVisited, VolunteerTimeSheet1, VolunteerTimeShee2, VolunteerTimeSheet3, VolunteerTimeSheet4, DataEnteredElectronically1, DataEnteredElectronically2, DataEnteredElectronically3, DataEnteredElectronically4, SampleShipped1, SampleShipped2, SampleShipped3, SampleShipped4, NumberOfSamplesJan, NumberOfSamplesFeb, NumberOfSamplesMar, NumberOfSamplesApr, NumberOfSamplesMay, NumberOfSamplesJun, NumberOfSamplesJul, NumberOfSamplesAug, NumberOfSamplesSep, NumberOfSamplesOct, NumberOfSamplesNov, NumberOfSamplesDec, Nutrient1Collected, Nutrient2Collected, BugCollected, UnknownSpringRecordedDate, UnknownFallRecordedDate, NumberOfSamplesBlank, NumberOfSamplesDuplicate, TroubleComment, NoteComment, HardshipComment, DateCreated, UserCreated, DateLastModified, UserLastModified, NumberOfMetalsBlank, NumberOfMetalsDuplicate FROM dbo.OrgStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RiverWatchDataSetOrgStatus.OrgStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RiverWatchDataSetOrgStatus.OrgStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            RiverWatchDataSetOrgStatus.OrgStatusDataTable dataTable = new RiverWatchDataSetOrgStatus.OrgStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RiverWatchDataSetOrgStatus.OrgStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(RiverWatchDataSetOrgStatus dataSet) {
            return this.Adapter.Update(dataSet, "OrgStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int OrganizationID, 
                    global::System.Nullable<global::System.DateTime> ContractStartDate, 
                    global::System.Nullable<global::System.DateTime> ContractEndDate, 
                    global::System.Nullable<bool> ContractSigned, 
                    global::System.Nullable<global::System.DateTime> ContractSignedDate, 
                    global::System.Nullable<bool> SiteVisited, 
                    global::System.Nullable<bool> VolunteerTimeSheet1, 
                    global::System.Nullable<bool> VolunteerTimeShee2, 
                    global::System.Nullable<bool> VolunteerTimeSheet3, 
                    global::System.Nullable<bool> VolunteerTimeSheet4, 
                    global::System.Nullable<bool> DataEnteredElectronically1, 
                    global::System.Nullable<bool> DataEnteredElectronically2, 
                    global::System.Nullable<bool> DataEnteredElectronically3, 
                    global::System.Nullable<bool> DataEnteredElectronically4, 
                    global::System.Nullable<bool> SampleShipped1, 
                    global::System.Nullable<bool> SampleShipped2, 
                    global::System.Nullable<bool> SampleShipped3, 
                    global::System.Nullable<bool> SampleShipped4, 
                    global::System.Nullable<int> NumberOfSamplesJan, 
                    global::System.Nullable<int> NumberOfSamplesFeb, 
                    global::System.Nullable<int> NumberOfSamplesMar, 
                    global::System.Nullable<int> NumberOfSamplesApr, 
                    global::System.Nullable<int> NumberOfSamplesMay, 
                    global::System.Nullable<int> NumberOfSamplesJun, 
                    global::System.Nullable<int> NumberOfSamplesJul, 
                    global::System.Nullable<int> NumberOfSamplesAug, 
                    global::System.Nullable<int> NumberOfSamplesSep, 
                    global::System.Nullable<int> NumberOfSamplesOct, 
                    global::System.Nullable<int> NumberOfSamplesNov, 
                    global::System.Nullable<int> NumberOfSamplesDec, 
                    global::System.Nullable<bool> Nutrient1Collected, 
                    global::System.Nullable<bool> Nutrient2Collected, 
                    global::System.Nullable<bool> BugCollected, 
                    global::System.Nullable<global::System.DateTime> UnknownSpringRecordedDate, 
                    global::System.Nullable<global::System.DateTime> UnknownFallRecordedDate, 
                    global::System.Nullable<int> NumberOfSamplesBlank, 
                    global::System.Nullable<int> NumberOfSamplesDuplicate, 
                    string TroubleComment, 
                    string NoteComment, 
                    string HardshipComment, 
                    global::System.Nullable<global::System.DateTime> DateCreated, 
                    string UserCreated, 
                    global::System.Nullable<global::System.DateTime> DateLastModified, 
                    string UserLastModified, 
                    global::System.Nullable<int> NumberOfMetalsBlank, 
                    global::System.Nullable<int> NumberOfMetalsDuplicate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(OrganizationID));
            if ((ContractStartDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ContractStartDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ContractEndDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(ContractEndDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ContractSigned.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(ContractSigned.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ContractSignedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ContractSignedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SiteVisited.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(SiteVisited.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(VolunteerTimeSheet1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeShee2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(VolunteerTimeShee2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(VolunteerTimeSheet3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(VolunteerTimeSheet4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(DataEnteredElectronically1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(DataEnteredElectronically2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(DataEnteredElectronically3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(DataEnteredElectronically4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(SampleShipped1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(SampleShipped2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(SampleShipped3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(SampleShipped4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJan.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(NumberOfSamplesJan.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesFeb.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(NumberOfSamplesFeb.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesMar.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(NumberOfSamplesMar.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesApr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(NumberOfSamplesApr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesMay.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((int)(NumberOfSamplesMay.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJun.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(NumberOfSamplesJun.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJul.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((int)(NumberOfSamplesJul.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesAug.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((int)(NumberOfSamplesAug.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesSep.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((int)(NumberOfSamplesSep.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesOct.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(NumberOfSamplesOct.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesNov.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(NumberOfSamplesNov.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesDec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(NumberOfSamplesDec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Nutrient1Collected.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(Nutrient1Collected.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Nutrient2Collected.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(Nutrient2Collected.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BugCollected.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(BugCollected.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((UnknownSpringRecordedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(UnknownSpringRecordedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((UnknownFallRecordedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(UnknownFallRecordedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesBlank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((int)(NumberOfSamplesBlank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesDuplicate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(NumberOfSamplesDuplicate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((TroubleComment == null)) {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = ((string)(TroubleComment));
            }
            if ((NoteComment == null)) {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(NoteComment));
            }
            if ((HardshipComment == null)) {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = ((string)(HardshipComment));
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((UserCreated == null)) {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(UserCreated));
            }
            if ((DateLastModified.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((System.DateTime)(DateLastModified.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((UserLastModified == null)) {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(UserLastModified));
            }
            if ((NumberOfMetalsBlank.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((int)(NumberOfMetalsBlank.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((NumberOfMetalsDuplicate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((int)(NumberOfMetalsDuplicate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int OrganizationID, 
                    global::System.Nullable<global::System.DateTime> ContractStartDate, 
                    global::System.Nullable<global::System.DateTime> ContractEndDate, 
                    global::System.Nullable<bool> ContractSigned, 
                    global::System.Nullable<global::System.DateTime> ContractSignedDate, 
                    global::System.Nullable<bool> SiteVisited, 
                    global::System.Nullable<bool> VolunteerTimeSheet1, 
                    global::System.Nullable<bool> VolunteerTimeShee2, 
                    global::System.Nullable<bool> VolunteerTimeSheet3, 
                    global::System.Nullable<bool> VolunteerTimeSheet4, 
                    global::System.Nullable<bool> DataEnteredElectronically1, 
                    global::System.Nullable<bool> DataEnteredElectronically2, 
                    global::System.Nullable<bool> DataEnteredElectronically3, 
                    global::System.Nullable<bool> DataEnteredElectronically4, 
                    global::System.Nullable<bool> SampleShipped1, 
                    global::System.Nullable<bool> SampleShipped2, 
                    global::System.Nullable<bool> SampleShipped3, 
                    global::System.Nullable<bool> SampleShipped4, 
                    global::System.Nullable<int> NumberOfSamplesJan, 
                    global::System.Nullable<int> NumberOfSamplesFeb, 
                    global::System.Nullable<int> NumberOfSamplesMar, 
                    global::System.Nullable<int> NumberOfSamplesApr, 
                    global::System.Nullable<int> NumberOfSamplesMay, 
                    global::System.Nullable<int> NumberOfSamplesJun, 
                    global::System.Nullable<int> NumberOfSamplesJul, 
                    global::System.Nullable<int> NumberOfSamplesAug, 
                    global::System.Nullable<int> NumberOfSamplesSep, 
                    global::System.Nullable<int> NumberOfSamplesOct, 
                    global::System.Nullable<int> NumberOfSamplesNov, 
                    global::System.Nullable<int> NumberOfSamplesDec, 
                    global::System.Nullable<bool> Nutrient1Collected, 
                    global::System.Nullable<bool> Nutrient2Collected, 
                    global::System.Nullable<bool> BugCollected, 
                    global::System.Nullable<global::System.DateTime> UnknownSpringRecordedDate, 
                    global::System.Nullable<global::System.DateTime> UnknownFallRecordedDate, 
                    global::System.Nullable<int> NumberOfSamplesBlank, 
                    global::System.Nullable<int> NumberOfSamplesDuplicate, 
                    string TroubleComment, 
                    string NoteComment, 
                    string HardshipComment, 
                    global::System.Nullable<global::System.DateTime> DateCreated, 
                    string UserCreated, 
                    global::System.Nullable<global::System.DateTime> DateLastModified, 
                    string UserLastModified, 
                    global::System.Nullable<int> NumberOfMetalsBlank, 
                    global::System.Nullable<int> NumberOfMetalsDuplicate, 
                    int Original_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(OrganizationID));
            if ((ContractStartDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ContractStartDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ContractEndDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(ContractEndDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ContractSigned.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(ContractSigned.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ContractSignedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ContractSignedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SiteVisited.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(SiteVisited.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(VolunteerTimeSheet1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeShee2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(VolunteerTimeShee2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(VolunteerTimeSheet3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((VolunteerTimeSheet4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(VolunteerTimeSheet4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(DataEnteredElectronically1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(DataEnteredElectronically2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(DataEnteredElectronically3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((DataEnteredElectronically4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(DataEnteredElectronically4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(SampleShipped1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(SampleShipped2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(SampleShipped3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((SampleShipped4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(SampleShipped4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJan.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(NumberOfSamplesJan.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesFeb.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(NumberOfSamplesFeb.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesMar.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(NumberOfSamplesMar.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesApr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(NumberOfSamplesApr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesMay.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(NumberOfSamplesMay.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJun.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(NumberOfSamplesJun.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesJul.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(NumberOfSamplesJul.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesAug.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(NumberOfSamplesAug.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesSep.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(NumberOfSamplesSep.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesOct.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(NumberOfSamplesOct.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesNov.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(NumberOfSamplesNov.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesDec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(NumberOfSamplesDec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Nutrient1Collected.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Nutrient1Collected.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Nutrient2Collected.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Nutrient2Collected.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((BugCollected.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(BugCollected.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((UnknownSpringRecordedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(UnknownSpringRecordedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((UnknownFallRecordedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(UnknownFallRecordedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesBlank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(NumberOfSamplesBlank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((NumberOfSamplesDuplicate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(NumberOfSamplesDuplicate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((TroubleComment == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(TroubleComment));
            }
            if ((NoteComment == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(NoteComment));
            }
            if ((HardshipComment == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(HardshipComment));
            }
            if ((DateCreated.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(DateCreated.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((UserCreated == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(UserCreated));
            }
            if ((DateLastModified.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((System.DateTime)(DateLastModified.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((UserLastModified == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(UserLastModified));
            }
            if ((NumberOfMetalsBlank.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((int)(NumberOfMetalsBlank.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((NumberOfMetalsDuplicate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(NumberOfMetalsDuplicate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private OrgStatusTableAdapter _orgStatusTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OrgStatusTableAdapter OrgStatusTableAdapter {
            get {
                return this._orgStatusTableAdapter;
            }
            set {
                this._orgStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._orgStatusTableAdapter != null) 
                            && (this._orgStatusTableAdapter.Connection != null))) {
                    return this._orgStatusTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._orgStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(RiverWatchDataSetOrgStatus dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._orgStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OrgStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._orgStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(RiverWatchDataSetOrgStatus dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._orgStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OrgStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._orgStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(RiverWatchDataSetOrgStatus dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._orgStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OrgStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._orgStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(RiverWatchDataSetOrgStatus dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._orgStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._orgStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._orgStatusTableAdapter != null)) {
                    revertConnections.Add(this._orgStatusTableAdapter, this._orgStatusTableAdapter.Connection);
                    this._orgStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._orgStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._orgStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._orgStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._orgStatusTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._orgStatusTableAdapter != null)) {
                    this._orgStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._orgStatusTableAdapter]));
                    this._orgStatusTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591